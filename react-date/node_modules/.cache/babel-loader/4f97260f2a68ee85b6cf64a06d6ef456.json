{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\date\\\\src\\\\components\\\\Datefns\\\\DateFnsExample.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ko\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport { add, format, sub, differenceInHours } from \"date-fns\";\nimport { ko } from \"date-fns/locale\";\nimport { format as timezoneFormat } from \"date-fns-tz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.locale(\"ko\");\ndayjs.extend(utc);\ndayjs.extend(timezone);\nexport default function DateFnsExample() {\n  _s();\n\n  const [day, setDay] = useState(\"\");\n  const dayRef = useRef(null);\n\n  const handleDayChange = event => {\n    setDay(format(new Date(event.target.value), \"EEEE\", {\n      locale: ko\n    }));\n  };\n\n  const dateFnsDate = new Date();\n  const newDateFnsDate = add(dateFnsDate, {\n    weeks: 1\n  });\n  const cloneNewDateFnsDate = add(newDateFnsDate, {\n    weeks: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"date-fns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Immutable Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [format(dateFnsDate, \"yyyy-MM-dd\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), format(newDateFnsDate, \"yyyy-MM-dd\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), format(cloneNewDateFnsDate, \"yyyy-MM-dd\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Summer Time (NewYork)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dayjs.tz.guess()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2018\\uB144 3\\uC6D4 10\\uC77C 13\\uC2DC\\uC5D0 \\uD558\\uB8E8 \\uB354\\uD558\\uAE30 :\", \" \", add(timezoneFormat(new Date(\"2018-03-10 13:00:00\"), \"yyyy-MM-dd HH:mm:ssXXX\", {\n        timeZone: \"America/New_York\"\n      }), {\n        days: 1\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2018\\uB144 3\\uC6D4 10\\uC77C 13\\uC2DC\\uC5D0 24\\uC2DC\\uAC04 \\uB354\\uD558\\uAE30 : \", timezoneFormat(new Date(\"2018-03-10 13:00:00\"), \"yyyy-MM-dd HH:mm:ssXXX\", {\n        timeZone: \"America/New_York\"\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"leap years (Korea)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2017\\uB144 1\\uC6D4 1\\uC77C\\uC5D0\\uC11C 1\\uB144 \\uBE7C\\uAE30 : \", format(sub(new Date(\"2017-01-01\"), {\n        years: 1\n      }), \"yyyy-MM-dd\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2017\\uB144 1\\uC6D4 1\\uC77C\\uC5D0\\uC11C 365\\uC77C \\uBE7C\\uAE30 : \", format(sub(new Date(\"2017-01-01\"), {\n        days: 365\n      }), \"yyyy-MM-dd\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD55C\\uAD6D\\uC5B4\\uB85C \\uD45C\\uAE30\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"07-17-2021 \\u2192 2021\\uB144 7\\uC6D4 17\\uC77C\\uB85C \\uD45C\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: format(new Date(\"07-17-2021\"), \"yyyy년 MM월 dd일\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC77C\\uC790\\uBCC4 \\uC694\\uC77C \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ref: dayRef,\n        onChange: handleDayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uBB34\\uC2A8 \\uC694\\uC77C\\uC774\\uC5C8\\uC744\\uAE4C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB450 \\uB0A0\\uC9DC \\uBE44\\uAD50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"2021-07-17 03:00 \\uC640 2021-07-18 02:00 \\uB294 \\uBA87\\uC2DC\\uAC04 \\uCC28\\uC774\\uC778\\uAC00?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `${differenceInHours(new Date(\"2021-07-17 03:00\"), new Date(\"2021-07-18 02:00\"))}시간`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DateFnsExample, \"mypyycaXY3Ij+kXnMNZfMC/QbLw=\");\n\n_c = DateFnsExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateFnsExample\");","map":{"version":3,"names":["React","useRef","useState","dayjs","utc","timezone","add","format","sub","differenceInHours","ko","timezoneFormat","locale","extend","DateFnsExample","day","setDay","dayRef","handleDayChange","event","Date","target","value","dateFnsDate","newDateFnsDate","weeks","cloneNewDateFnsDate","tz","guess","timeZone","days","years"],"sources":["C:/React-app/test/date/src/components/Datefns/DateFnsExample.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ko\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\n\r\nimport { add, format, sub, differenceInHours } from \"date-fns\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport { format as timezoneFormat } from \"date-fns-tz\";\r\n\r\ndayjs.locale(\"ko\");\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nexport default function DateFnsExample() {\r\n  const [day, setDay] = useState(\"\");\r\n  const dayRef = useRef(null);\r\n  const handleDayChange = (event) => {\r\n    setDay(format(new Date(event.target.value), \"EEEE\", { locale: ko }));\r\n  };\r\n\r\n  const dateFnsDate = new Date();\r\n  const newDateFnsDate = add(dateFnsDate, { weeks: 1 });\r\n  const cloneNewDateFnsDate = add(newDateFnsDate, { weeks: 1 });\r\n\r\n  return (\r\n    <div>\r\n      <h1>date-fns</h1>\r\n      <div>Immutable Check</div>\r\n      <div>\r\n        {format(dateFnsDate, \"yyyy-MM-dd\")}\r\n        <br />\r\n        {format(newDateFnsDate, \"yyyy-MM-dd\")}\r\n        <br />\r\n        {format(cloneNewDateFnsDate, \"yyyy-MM-dd\")}\r\n      </div>\r\n      <br />\r\n      <div>Summer Time (NewYork)</div>\r\n      <div>{dayjs.tz.guess()}</div>\r\n      <div>\r\n        2018년 3월 10일 13시에 하루 더하기 :{\" \"}\r\n        {add(timezoneFormat(new Date(\"2018-03-10 13:00:00\"), \"yyyy-MM-dd HH:mm:ssXXX\", { timeZone: \"America/New_York\" }), { days: 1 })}\r\n      </div>\r\n      <div>\r\n        2018년 3월 10일 13시에 24시간 더하기 : {timezoneFormat(new Date(\"2018-03-10 13:00:00\"), \"yyyy-MM-dd HH:mm:ssXXX\", { timeZone: \"America/New_York\" })}\r\n      </div>\r\n      <br />\r\n      <div>leap years (Korea)</div>\r\n      <div>2017년 1월 1일에서 1년 빼기 : {format(sub(new Date(\"2017-01-01\"), { years: 1 }), \"yyyy-MM-dd\")}</div>\r\n      <div>2017년 1월 1일에서 365일 빼기 : {format(sub(new Date(\"2017-01-01\"), { days: 365 }), \"yyyy-MM-dd\")}</div>\r\n      <br />\r\n      <div>한국어로 표기하기</div>\r\n      <div>07-17-2021 → 2021년 7월 17일로 표기</div>\r\n      <div>{format(new Date(\"07-17-2021\"), \"yyyy년 MM월 dd일\")}</div>\r\n      <br />\r\n      <div>일자별 요일 찾기</div>\r\n      <div>\r\n        <input type=\"date\" ref={dayRef} onChange={handleDayChange} />\r\n        <div>무슨 요일이었을까?</div>\r\n        <div>{day}</div>\r\n      </div>\r\n      <br />\r\n      <div>두 날짜 비교</div>\r\n      <div>2021-07-17 03:00 와 2021-07-18 02:00 는 몇시간 차이인가?</div>\r\n      <div>{`${differenceInHours(new Date(\"2021-07-17 03:00\"), new Date(\"2021-07-18 02:00\"))}시간`}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}