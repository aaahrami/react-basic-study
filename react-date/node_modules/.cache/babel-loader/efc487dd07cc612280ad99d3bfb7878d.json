{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\date\\\\src\\\\components\\\\Moment\\\\MomentExample.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport \"moment/locale/ko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MomentExample() {\n  _s();\n\n  const [day, setDay] = useState(\"\");\n  const dayRef = useRef(null);\n\n  const handleDayChange = event => {\n    setDay(moment(event.target.value, \"YYYY-MM-DD\").format(\"dddd\"));\n  };\n\n  const momentDate = moment();\n  const newMomentDate = momentDate.add(1, \"week\");\n  const cloneNewMomentDate = newMomentDate.clone().add(1, \"week\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Moment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Immutable Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [momentDate.format(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), newMomentDate.format(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), cloneNewMomentDate.format()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Summer Time (NewYork)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2018\\uB144 3\\uC6D4 10\\uC77C 13\\uC2DC\\uC5D0 \\uD558\\uB8E8 \\uB354\\uD558\\uAE30 : \", moment.tz(\"2018-03-10 13:00:00\", \"America/New_York\").add(1, \"day\").format()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2018\\uB144 3\\uC6D4 10\\uC77C 13\\uC2DC\\uC5D0 24\\uC2DC\\uAC04 \\uB354\\uD558\\uAE30 : \", moment.tz(\"2018-03-10 13:00:00\", \"America/New_York\").add(24, \"hours\").format()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"leap years (Korea)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2017\\uB144 1\\uC6D4 1\\uC77C\\uC5D0\\uC11C 1\\uB144 \\uBE7C\\uAE30 : \", moment(\"2017-01-01\").subtract(1, \"year\").format()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"2017\\uB144 1\\uC6D4 1\\uC77C\\uC5D0\\uC11C 365\\uC77C \\uBE7C\\uAE30 : \", moment(\"2017-01-01\").subtract(365, \"day\").format()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD55C\\uAD6D\\uC5B4\\uB85C \\uD45C\\uAE30\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"07-17-2021 \\u2192 2021\\uB144 7\\uC6D4 17\\uC77C\\uB85C \\uD45C\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: moment(\"07-17-2021\").format(\"YYYY년 MM월 DD일\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC77C\\uC790\\uBCC4 \\uC694\\uC77C \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: dayRef,\n          onChange: handleDayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uBB34\\uC2A8 \\uC694\\uC77C\\uC774\\uC5C8\\uC744\\uAE4C?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB450 \\uB0A0\\uC9DC \\uBE44\\uAD50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"2021-07-17 03:00 \\uC640 2021-07-18 02:00 \\uB294 \\uBA87\\uC2DC\\uAC04 \\uCC28\\uC774\\uC778\\uAC00?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `${moment(\"2021-07-17 03:00\").diff(moment(\"2021-07-18 02:00\"), \"hours\")}시간`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MomentExample, \"mypyycaXY3Ij+kXnMNZfMC/QbLw=\");\n\n_c = MomentExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"MomentExample\");","map":{"version":3,"names":["React","useRef","useState","moment","MomentExample","day","setDay","dayRef","handleDayChange","event","target","value","format","momentDate","newMomentDate","add","cloneNewMomentDate","clone","tz","subtract","diff"],"sources":["C:/React-app/test/date/src/components/Moment/MomentExample.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport \"moment/locale/ko\";\r\n\r\nexport default function MomentExample() {\r\n  const [day, setDay] = useState(\"\");\r\n  const dayRef = useRef(null);\r\n  const handleDayChange = (event) => {\r\n    setDay(moment(event.target.value, \"YYYY-MM-DD\").format(\"dddd\"));\r\n  };\r\n\r\n  const momentDate = moment();\r\n  const newMomentDate = momentDate.add(1, \"week\");\r\n  const cloneNewMomentDate = newMomentDate.clone().add(1, \"week\");\r\n\r\n  return (\r\n    <div>\r\n      <h1>Moment</h1>\r\n      <div>Immutable Check</div>\r\n      <div>\r\n        {momentDate.format()}\r\n        <br />\r\n        {newMomentDate.format()}\r\n        <br />\r\n        {cloneNewMomentDate.format()}\r\n      </div>\r\n      <br />\r\n      <div>Summer Time (NewYork)</div>\r\n      <div>2018년 3월 10일 13시에 하루 더하기 : {moment.tz(\"2018-03-10 13:00:00\", \"America/New_York\").add(1, \"day\").format()}</div>\r\n      <div>2018년 3월 10일 13시에 24시간 더하기 : {moment.tz(\"2018-03-10 13:00:00\", \"America/New_York\").add(24, \"hours\").format()}</div>\r\n      <br />\r\n      <div>leap years (Korea)</div>\r\n      <div>2017년 1월 1일에서 1년 빼기 : {moment(\"2017-01-01\").subtract(1, \"year\").format()}</div>\r\n      <div>2017년 1월 1일에서 365일 빼기 : {moment(\"2017-01-01\").subtract(365, \"day\").format()}</div>\r\n      <br />\r\n      <div>한국어로 표기하기</div>\r\n      <div>07-17-2021 → 2021년 7월 17일로 표기</div>\r\n      <div>{moment(\"07-17-2021\").format(\"YYYY년 MM월 DD일\")}</div>\r\n      <br />\r\n      <div>\r\n        <div>일자별 요일 찾기</div>\r\n        <div>\r\n          <input type=\"date\" ref={dayRef} onChange={handleDayChange} />\r\n          <div>무슨 요일이었을까?</div>\r\n          <div>{day}</div>\r\n        </div>\r\n        <div>두 날짜 비교</div>\r\n        <div>2021-07-17 03:00 와 2021-07-18 02:00 는 몇시간 차이인가?</div>\r\n        <div>{`${moment(\"2021-07-17 03:00\").diff(moment(\"2021-07-18 02:00\"), \"hours\")}시간`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}