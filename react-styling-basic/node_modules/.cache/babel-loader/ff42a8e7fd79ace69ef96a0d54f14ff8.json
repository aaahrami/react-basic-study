{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\styling\\\\src\\\\components\\\\StyledComponentsExample\\\\StyledComponentsExample.jsx\";\nimport React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\"; // Define our button, but with the use of props.theme this time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${props => props.theme.color};\n  border: 2px solid ${props => props.theme.borderColor};\n`; // We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\n\n_c = Button;\nButton.defaultProps = {\n  theme: {\n    color: \"palevioletred\",\n    borderColor: \"blue\"\n  }\n}; // Define what props.theme will look like\n\nconst theme = {\n  color: \"mediumseagreen\",\n  borderColor: \"mediumseagreen\"\n};\nexport default function StyledComponentsExample() {\n  // Use Title and Wrapper like any other React component – except they're styled!\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"Normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Themed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StyledComponentsExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledComponentsExample\");","map":{"version":3,"names":["React","styled","ThemeProvider","Button","button","props","theme","color","borderColor","defaultProps","StyledComponentsExample"],"sources":["C:/React-app/test/styling/src/components/StyledComponentsExample/StyledComponentsExample.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\n\r\n// Define our button, but with the use of props.theme this time\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n\r\n  /* Color the border and text with theme.main */\r\n  color: ${(props) => props.theme.color};\r\n  border: 2px solid ${(props) => props.theme.borderColor};\r\n`;\r\n\r\n// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\r\nButton.defaultProps = {\r\n  theme: {\r\n    color: \"palevioletred\",\r\n    borderColor: \"blue\",\r\n  },\r\n};\r\n\r\n// Define what props.theme will look like\r\nconst theme = {\r\n  color: \"mediumseagreen\",\r\n  borderColor: \"mediumseagreen\",\r\n};\r\n\r\nexport default function StyledComponentsExample() {\r\n  // Use Title and Wrapper like any other React component – except they're styled!\r\n  return (\r\n    <div>\r\n      <Button>Normal</Button>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Button>Themed</Button>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC,C,CAEA;;;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAM;AACxC,sBAAuBF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,WAAY;AACzD,CATA,C,CAWA;;KAXML,M;AAYNA,MAAM,CAACM,YAAP,GAAsB;EACpBH,KAAK,EAAE;IACLC,KAAK,EAAE,eADF;IAELC,WAAW,EAAE;EAFR;AADa,CAAtB,C,CAOA;;AACA,MAAMF,KAAK,GAAG;EACZC,KAAK,EAAE,gBADK;EAEZC,WAAW,EAAE;AAFD,CAAd;AAKA,eAAe,SAASE,uBAAT,GAAmC;EAChD;EACA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,aAAD;MAAe,KAAK,EAAEJ,KAAtB;MAAA,uBACE,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;MAXuBI,uB"},"metadata":{},"sourceType":"module"}