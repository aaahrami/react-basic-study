{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\styling\\\\src\\\\components\\\\StyledComponentsExample\\\\StyledComponentsExample.jsx\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\"; // Create a Title component that'll render an <h1> tag with some styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`; // Create a Wrapper component that'll render a <section> tag with some styles\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.size || \"1em\"\n}))`\n  border: 2px solid palevioletred;\n  margin: ${props => props.size};\n  padding: ${props => props.size};\n`; // Input's attrs will be applied first, and then this attrs obj\n\nconst PasswordInput = styled(Input).attrs({\n  type: \"password\"\n})`\n  // similarly, border will override Input's border\n  border: 2px solid aqua;\n`; // Create the keyframes\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`; // Here we create a component that will rotate everything we pass in over two seconds\n\nconst Rotate = styled.div`\n  display: inline-block;\n  animation: ${rotate} 2s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n`; // Define our button, but with the use of props.theme this time\n\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${props => props.theme.main};\n  border: 2px solid ${props => props.theme.main};\n`; // We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\n\n_c = Button;\nButton.defaultProps = {\n  theme: {\n    main: \"palevioletred\"\n  }\n}; // Define what props.theme will look like\n\nconst theme = {\n  main: \"mediumseagreen\"\n};\nexport default function StyledComponentsExample() {\n  // Use Title and Wrapper like any other React component – except they're styled!\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"Normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Themed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StyledComponentsExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledComponentsExample\");","map":{"version":3,"names":["React","styled","keyframes","Title","h1","Input","input","attrs","props","type","size","PasswordInput","rotate","Rotate","div","Button","button","theme","main","defaultProps","StyledComponentsExample"],"sources":["C:/React-app/test/styling/src/components/StyledComponentsExample/StyledComponentsExample.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n// Create a Title component that'll render an <h1> tag with some styles\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\n// Create a Wrapper component that'll render a <section> tag with some styles\r\nconst Input = styled.input.attrs((props) => ({\r\n  type: \"text\",\r\n  size: props.size || \"1em\",\r\n}))`\r\n  border: 2px solid palevioletred;\r\n  margin: ${(props) => props.size};\r\n  padding: ${(props) => props.size};\r\n`;\r\n\r\n// Input's attrs will be applied first, and then this attrs obj\r\nconst PasswordInput = styled(Input).attrs({\r\n  type: \"password\",\r\n})`\r\n  // similarly, border will override Input's border\r\n  border: 2px solid aqua;\r\n`;\r\n\r\n// Create the keyframes\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// Here we create a component that will rotate everything we pass in over two seconds\r\nconst Rotate = styled.div`\r\n  display: inline-block;\r\n  animation: ${rotate} 2s linear infinite;\r\n  padding: 2rem 1rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\n// Define our button, but with the use of props.theme this time\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n\r\n  /* Color the border and text with theme.main */\r\n  color: ${(props) => props.theme.main};\r\n  border: 2px solid ${(props) => props.theme.main};\r\n`;\r\n\r\n// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\r\nButton.defaultProps = {\r\n  theme: {\r\n    main: \"palevioletred\",\r\n  },\r\n};\r\n\r\n// Define what props.theme will look like\r\nconst theme = {\r\n  main: \"mediumseagreen\",\r\n};\r\n\r\nexport default function StyledComponentsExample() {\r\n  // Use Title and Wrapper like any other React component – except they're styled!\r\n  return (\r\n    <div>\r\n      <Button>Normal</Button>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Button>Themed</Button>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC,C,CAEA;;;AACA,MAAMC,KAAK,GAAGF,MAAM,CAACG,EAAG;AACxB;AACA;AACA;AACA,CAJA,C,CAMA;;AACA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,CAAaC,KAAb,CAAoBC,KAAD,KAAY;EAC3CC,IAAI,EAAE,MADqC;EAE3CC,IAAI,EAAEF,KAAK,CAACE,IAAN,IAAc;AAFuB,CAAZ,CAAnB,CAGV;AACJ;AACA,YAAaF,KAAD,IAAWA,KAAK,CAACE,IAAK;AAClC,aAAcF,KAAD,IAAWA,KAAK,CAACE,IAAK;AACnC,CAPA,C,CASA;;AACA,MAAMC,aAAa,GAAGV,MAAM,CAACI,KAAD,CAAN,CAAcE,KAAd,CAAoB;EACxCE,IAAI,EAAE;AADkC,CAApB,CAEnB;AACH;AACA;AACA,CALA,C,CAOA;;AACA,MAAMG,MAAM,GAAGV,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,MAAMW,MAAM,GAAGZ,MAAM,CAACa,GAAI;AAC1B;AACA,eAAeF,MAAO;AACtB;AACA;AACA,CALA,C,CAOA;;AACA,MAAMG,MAAM,GAAGd,MAAM,CAACe,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAYR,KAAD,IAAWA,KAAK,CAACS,KAAN,CAAYC,IAAK;AACvC,sBAAuBV,KAAD,IAAWA,KAAK,CAACS,KAAN,CAAYC,IAAK;AAClD,CATA,C,CAWA;;KAXMH,M;AAYNA,MAAM,CAACI,YAAP,GAAsB;EACpBF,KAAK,EAAE;IACLC,IAAI,EAAE;EADD;AADa,CAAtB,C,CAMA;;AACA,MAAMD,KAAK,GAAG;EACZC,IAAI,EAAE;AADM,CAAd;AAIA,eAAe,SAASE,uBAAT,GAAmC;EAChD;EACA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,aAAD;MAAe,KAAK,EAAEH,KAAtB;MAAA,uBACE,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;MAXuBG,uB"},"metadata":{},"sourceType":"module"}