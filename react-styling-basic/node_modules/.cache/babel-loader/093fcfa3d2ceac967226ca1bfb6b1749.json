{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\styling\\\\src\\\\components\\\\StyledComponentsExample\\\\StyledComponentsExample.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\"; // Define our button, but with the use of props.theme this time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${props => props.theme.color};\n  border: 2px solid ${props => props.theme.borderColor};\n`; // Define what props.theme will look like\n\n_c = Button;\nconst defaultTheme = {\n  color: \"mediumseagreen\",\n  borderColor: \"mediumseagreen\"\n};\nconst redTheme = {\n  color: \"red\",\n  borderColor: \"red\"\n};\nconst GlobalStyle = createGlobalStyle`\n  button {\n    background-color: pink;\n  }\n`;\n_c2 = GlobalStyle;\nexport default function StyledComponentsExample() {\n  _s();\n\n  const [theme, setTheme] = useState(defaultTheme); // Use Title and Wrapper like any other React component – except they're styled!\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTheme(redTheme),\n        children: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTheme(defaultTheme),\n        children: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Themed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"buttom\", {\n        children: \"Other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StyledComponentsExample, \"FHn34gXH9qfbNc0YwENDsTaP8hM=\");\n\n_c3 = StyledComponentsExample;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"GlobalStyle\");\n$RefreshReg$(_c3, \"StyledComponentsExample\");","map":{"version":3,"names":["React","useState","styled","ThemeProvider","createGlobalStyle","Button","button","props","theme","color","borderColor","defaultTheme","redTheme","GlobalStyle","StyledComponentsExample","setTheme"],"sources":["C:/React-app/test/styling/src/components/StyledComponentsExample/StyledComponentsExample.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\n\r\n// Define our button, but with the use of props.theme this time\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n\r\n  /* Color the border and text with theme.main */\r\n  color: ${(props) => props.theme.color};\r\n  border: 2px solid ${(props) => props.theme.borderColor};\r\n`;\r\n\r\n// Define what props.theme will look like\r\nconst defaultTheme = {\r\n  color: \"mediumseagreen\",\r\n  borderColor: \"mediumseagreen\",\r\n};\r\n\r\nconst redTheme = {\r\n  color: \"red\",\r\n  borderColor: \"red\",\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  button {\r\n    background-color: pink;\r\n  }\r\n`;\r\n\r\nexport default function StyledComponentsExample() {\r\n  const [theme, setTheme] = useState(defaultTheme);\r\n  // Use Title and Wrapper like any other React component – except they're styled!\r\n  return (\r\n    <>\r\n      <div>\r\n        <GlobalStyle />\r\n\r\n        <button onClick={() => setTheme(redTheme)}>red</button>\r\n        <button onClick={() => setTheme(defaultTheme)}>green</button>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <Button>Normal</Button>\r\n          <Button>Themed</Button>\r\n        </ThemeProvider>\r\n      </div>\r\n      <div>\r\n        <buttom>Other</buttom>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,EAAgCC,iBAAhC,QAAyD,mBAAzD,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAM;AACxC,sBAAuBF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,WAAY;AACzD,CATA,C,CAWA;;KAXML,M;AAYN,MAAMM,YAAY,GAAG;EACnBF,KAAK,EAAE,gBADY;EAEnBC,WAAW,EAAE;AAFM,CAArB;AAKA,MAAME,QAAQ,GAAG;EACfH,KAAK,EAAE,KADQ;EAEfC,WAAW,EAAE;AAFE,CAAjB;AAKA,MAAMG,WAAW,GAAGT,iBAAkB;AACtC;AACA;AACA;AACA,CAJA;MAAMS,W;AAMN,eAAe,SAASC,uBAAT,GAAmC;EAAA;;EAChD,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBd,QAAQ,CAACU,YAAD,CAAlC,CADgD,CAEhD;;EACA,oBACE;IAAA,wBACE;MAAA,wBACE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAQ,OAAO,EAAE,MAAMI,QAAQ,CAACH,QAAD,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAQ,OAAO,EAAE,MAAMG,QAAQ,CAACJ,YAAD,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAME,QAAC,aAAD;QAAe,KAAK,EAAEH,KAAtB;QAAA,wBACE,QAAC,MAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA,gBADF;AAkBD;;GArBuBM,uB;;MAAAA,uB"},"metadata":{},"sourceType":"module"}