{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-app\\\\test\\\\my-app\\\\src\\\\components\\\\3-11.Portal\\\\Dialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dialog(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(true),\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 99,\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        border: \"1px solid black\",\n        padding: 24,\n        backgroundColor: \"white\"\n      },\n      children: [typeof props.title === \"string\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 46\n      }, this) : props.title, typeof props.description === \"string\" ? /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 52\n      }, this) : props.description, typeof props.button === \"string\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"red\",\n          color: \"white\"\n        },\n        onClick: () => setIsOpen(false),\n        children: props.button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsOpen(false),\n        children: props.button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: \"lightgray\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dialog, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","Dialog","props","isOpen","setIsOpen","position","zIndex","top","left","transform","border","padding","backgroundColor","title","description","button","color","bottom","right"],"sources":["C:/React-app/test/my-app/src/components/3-11.Portal/Dialog.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Dialog(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <button onClick={() => setIsOpen(true)}>Open</button>\r\n      {isOpen && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 99,\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            border: \"1px solid black\",\r\n            padding: 24,\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          {typeof props.title === \"string\" ? <h1>{props.title}</h1> : props.title}\r\n          {typeof props.description === \"string\" ? <h5>{props.description}</h5> : props.description}\r\n          {typeof props.button === \"string\" ? (\r\n            <button style={{ backgroundColor: \"red\", color: \"white\" }} onClick={() => setIsOpen(false)}>\r\n              {props.button}\r\n            </button>\r\n          ) : (\r\n            <div onClick={() => setIsOpen(false)}>{props.button}</div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {isOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            backgroundColor: \"lightgray\",\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;EACA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAMI,SAAS,CAAC,IAAD,CAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGD,MAAM,iBACL;MACE,KAAK,EAAE;QACLE,QAAQ,EAAE,UADL;QAELC,MAAM,EAAE,EAFH;QAGLC,GAAG,EAAE,KAHA;QAILC,IAAI,EAAE,KAJD;QAKLC,SAAS,EAAE,uBALN;QAMLC,MAAM,EAAE,iBANH;QAOLC,OAAO,EAAE,EAPJ;QAQLC,eAAe,EAAE;MARZ,CADT;MAAA,WAYG,OAAOV,KAAK,CAACW,KAAb,KAAuB,QAAvB,gBAAkC;QAAA,UAAKX,KAAK,CAACW;MAAX;QAAA;QAAA;QAAA;MAAA,QAAlC,GAA2DX,KAAK,CAACW,KAZpE,EAaG,OAAOX,KAAK,CAACY,WAAb,KAA6B,QAA7B,gBAAwC;QAAA,UAAKZ,KAAK,CAACY;MAAX;QAAA;QAAA;QAAA;MAAA,QAAxC,GAAuEZ,KAAK,CAACY,WAbhF,EAcG,OAAOZ,KAAK,CAACa,MAAb,KAAwB,QAAxB,gBACC;QAAQ,KAAK,EAAE;UAAEH,eAAe,EAAE,KAAnB;UAA0BI,KAAK,EAAE;QAAjC,CAAf;QAA2D,OAAO,EAAE,MAAMZ,SAAS,CAAC,KAAD,CAAnF;QAAA,UACGF,KAAK,CAACa;MADT;QAAA;QAAA;QAAA;MAAA,QADD,gBAKC;QAAK,OAAO,EAAE,MAAMX,SAAS,CAAC,KAAD,CAA7B;QAAA,UAAuCF,KAAK,CAACa;MAA7C;QAAA;QAAA;QAAA;MAAA,QAnBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EA0BGZ,MAAM,iBACL;MACE,KAAK,EAAE;QACLE,QAAQ,EAAE,OADL;QAELE,GAAG,EAAE,CAFA;QAGLC,IAAI,EAAE,CAHD;QAILS,MAAM,EAAE,CAJH;QAKLC,KAAK,EAAE,CALF;QAMLN,eAAe,EAAE;MANZ;IADT;MAAA;MAAA;MAAA;IAAA,QA3BJ;EAAA,gBADF;AAyCD;;GA3CuBX,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}