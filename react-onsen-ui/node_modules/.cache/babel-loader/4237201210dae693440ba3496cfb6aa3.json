{"ast":null,"code":"/*\nCopyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var setImmediate;\n\n  function addFromSetImmediateArguments(args) {\n    tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);\n    return nextHandle++;\n  } // This function accepts the same arguments as setImmediate, but\n  // returns a function that requires no arguments.\n\n\n  function partiallyApplied(handler) {\n    var args = [].slice.call(arguments, 1);\n    return function () {\n      if (typeof handler === \"function\") {\n        handler.apply(undefined, args);\n      } else {\n        new Function(\"\" + handler)();\n      }\n    };\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(partiallyApplied(runIfPresent, handle), 0);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          task();\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function installNextTickImplementation() {\n    setImmediate = function () {\n      var handle = addFromSetImmediateArguments(arguments);\n      process.nextTick(partiallyApplied(runIfPresent, handle));\n      return handle;\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function (event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    setImmediate = function () {\n      var handle = addFromSetImmediateArguments(arguments);\n      global.postMessage(messagePrefix + handle, \"*\");\n      return handle;\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    setImmediate = function () {\n      var handle = addFromSetImmediateArguments(arguments);\n      channel.port2.postMessage(handle);\n      return handle;\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    setImmediate = function () {\n      var handle = addFromSetImmediateArguments(arguments); // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n      return handle;\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    setImmediate = function () {\n      var handle = addFromSetImmediateArguments(arguments);\n      setTimeout(partiallyApplied(runIfPresent, handle), 0);\n      return handle;\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6â€“8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(self);","map":{"version":3,"names":["global","undefined","setImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","addFromSetImmediateArguments","args","partiallyApplied","apply","handler","slice","call","arguments","Function","runIfPresent","handle","setTimeout","task","clearImmediate","installNextTickImplementation","process","nextTick","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","Math","random","onGlobalMessage","event","source","data","indexOf","length","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","documentElement","script","createElement","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","Object","getPrototypeOf","toString","self"],"sources":["C:/React-app/test/ui/node_modules/onsenui/esm/polyfills/setImmediate@1.0.2+mod/setImmediate.js"],"sourcesContent":["/*\nCopyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var setImmediate;\n\n    function addFromSetImmediateArguments(args) {\n        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);\n        return nextHandle++;\n    }\n\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    function partiallyApplied(handler) {\n        var args = [].slice.call(arguments, 1);\n        return function() {\n            if (typeof handler === \"function\") {\n                handler.apply(undefined, args);\n            } else {\n                (new Function(\"\" + handler))();\n            }\n        };\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    task();\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function installNextTickImplementation() {\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            process.nextTick(partiallyApplied(runIfPresent, handle));\n            return handle;\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            global.postMessage(messagePrefix + handle, \"*\");\n            return handle;\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n            return handle;\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6â€“8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(self));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,WAAUA,MAAV,EAAkBC,SAAlB,EAA6B;EAC1B;;EAEA,IAAID,MAAM,CAACE,YAAX,EAAyB;IACrB;EACH;;EAED,IAAIC,UAAU,GAAG,CAAjB,CAP0B,CAON;;EACpB,IAAIC,aAAa,GAAG,EAApB;EACA,IAAIC,qBAAqB,GAAG,KAA5B;EACA,IAAIC,GAAG,GAAGN,MAAM,CAACO,QAAjB;EACA,IAAIL,YAAJ;;EAEA,SAASM,4BAAT,CAAsCC,IAAtC,EAA4C;IACxCL,aAAa,CAACD,UAAD,CAAb,GAA4BO,gBAAgB,CAACC,KAAjB,CAAuBV,SAAvB,EAAkCQ,IAAlC,CAA5B;IACA,OAAON,UAAU,EAAjB;EACH,CAhByB,CAkB1B;EACA;;;EACA,SAASO,gBAAT,CAA0BE,OAA1B,EAAmC;IAC/B,IAAIH,IAAI,GAAG,GAAGI,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAX;IACA,OAAO,YAAW;MACd,IAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;QAC/BA,OAAO,CAACD,KAAR,CAAcV,SAAd,EAAyBQ,IAAzB;MACH,CAFD,MAEO;QACF,IAAIO,QAAJ,CAAa,KAAKJ,OAAlB,CAAD;MACH;IACJ,CAND;EAOH;;EAED,SAASK,YAAT,CAAsBC,MAAtB,EAA8B;IAC1B;IACA;IACA,IAAIb,qBAAJ,EAA2B;MACvB;MACA;MACAc,UAAU,CAACT,gBAAgB,CAACO,YAAD,EAAeC,MAAf,CAAjB,EAAyC,CAAzC,CAAV;IACH,CAJD,MAIO;MACH,IAAIE,IAAI,GAAGhB,aAAa,CAACc,MAAD,CAAxB;;MACA,IAAIE,IAAJ,EAAU;QACNf,qBAAqB,GAAG,IAAxB;;QACA,IAAI;UACAe,IAAI;QACP,CAFD,SAEU;UACNC,cAAc,CAACH,MAAD,CAAd;UACAb,qBAAqB,GAAG,KAAxB;QACH;MACJ;IACJ;EACJ;;EAED,SAASgB,cAAT,CAAwBH,MAAxB,EAAgC;IAC5B,OAAOd,aAAa,CAACc,MAAD,CAApB;EACH;;EAED,SAASI,6BAAT,GAAyC;IACrCpB,YAAY,GAAG,YAAW;MACtB,IAAIgB,MAAM,GAAGV,4BAA4B,CAACO,SAAD,CAAzC;MACAQ,OAAO,CAACC,QAAR,CAAiBd,gBAAgB,CAACO,YAAD,EAAeC,MAAf,CAAjC;MACA,OAAOA,MAAP;IACH,CAJD;EAKH;;EAED,SAASO,iBAAT,GAA6B;IACzB;IACA;IACA,IAAIzB,MAAM,CAAC0B,WAAP,IAAsB,CAAC1B,MAAM,CAAC2B,aAAlC,EAAiD;MAC7C,IAAIC,yBAAyB,GAAG,IAAhC;MACA,IAAIC,YAAY,GAAG7B,MAAM,CAAC8B,SAA1B;;MACA9B,MAAM,CAAC8B,SAAP,GAAmB,YAAW;QAC1BF,yBAAyB,GAAG,KAA5B;MACH,CAFD;;MAGA5B,MAAM,CAAC0B,WAAP,CAAmB,EAAnB,EAAuB,GAAvB;MACA1B,MAAM,CAAC8B,SAAP,GAAmBD,YAAnB;MACA,OAAOD,yBAAP;IACH;EACJ;;EAED,SAASG,gCAAT,GAA4C;IACxC;IACA;IACA;IAEA,IAAIC,aAAa,GAAG,kBAAkBC,IAAI,CAACC,MAAL,EAAlB,GAAkC,GAAtD;;IACA,IAAIC,eAAe,GAAG,UAASC,KAAT,EAAgB;MAClC,IAAIA,KAAK,CAACC,MAAN,KAAiBrC,MAAjB,IACA,OAAOoC,KAAK,CAACE,IAAb,KAAsB,QADtB,IAEAF,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmBP,aAAnB,MAAsC,CAF1C,EAE6C;QACzCf,YAAY,CAAC,CAACmB,KAAK,CAACE,IAAN,CAAWzB,KAAX,CAAiBmB,aAAa,CAACQ,MAA/B,CAAF,CAAZ;MACH;IACJ,CAND;;IAQA,IAAIxC,MAAM,CAACyC,gBAAX,EAA6B;MACzBzC,MAAM,CAACyC,gBAAP,CAAwB,SAAxB,EAAmCN,eAAnC,EAAoD,KAApD;IACH,CAFD,MAEO;MACHnC,MAAM,CAAC0C,WAAP,CAAmB,WAAnB,EAAgCP,eAAhC;IACH;;IAEDjC,YAAY,GAAG,YAAW;MACtB,IAAIgB,MAAM,GAAGV,4BAA4B,CAACO,SAAD,CAAzC;MACAf,MAAM,CAAC0B,WAAP,CAAmBM,aAAa,GAAGd,MAAnC,EAA2C,GAA3C;MACA,OAAOA,MAAP;IACH,CAJD;EAKH;;EAED,SAASyB,mCAAT,GAA+C;IAC3C,IAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;IACAD,OAAO,CAACE,KAAR,CAAchB,SAAd,GAA0B,UAASM,KAAT,EAAgB;MACtC,IAAIlB,MAAM,GAAGkB,KAAK,CAACE,IAAnB;MACArB,YAAY,CAACC,MAAD,CAAZ;IACH,CAHD;;IAKAhB,YAAY,GAAG,YAAW;MACtB,IAAIgB,MAAM,GAAGV,4BAA4B,CAACO,SAAD,CAAzC;MACA6B,OAAO,CAACG,KAAR,CAAcrB,WAAd,CAA0BR,MAA1B;MACA,OAAOA,MAAP;IACH,CAJD;EAKH;;EAED,SAAS8B,qCAAT,GAAiD;IAC7C,IAAIC,IAAI,GAAG3C,GAAG,CAAC4C,eAAf;;IACAhD,YAAY,GAAG,YAAW;MACtB,IAAIgB,MAAM,GAAGV,4BAA4B,CAACO,SAAD,CAAzC,CADsB,CAEtB;MACA;;MACA,IAAIoC,MAAM,GAAG7C,GAAG,CAAC8C,aAAJ,CAAkB,QAAlB,CAAb;;MACAD,MAAM,CAACE,kBAAP,GAA4B,YAAY;QACpCpC,YAAY,CAACC,MAAD,CAAZ;QACAiC,MAAM,CAACE,kBAAP,GAA4B,IAA5B;QACAJ,IAAI,CAACK,WAAL,CAAiBH,MAAjB;QACAA,MAAM,GAAG,IAAT;MACH,CALD;;MAMAF,IAAI,CAACM,WAAL,CAAiBJ,MAAjB;MACA,OAAOjC,MAAP;IACH,CAbD;EAcH;;EAED,SAASsC,+BAAT,GAA2C;IACvCtD,YAAY,GAAG,YAAW;MACtB,IAAIgB,MAAM,GAAGV,4BAA4B,CAACO,SAAD,CAAzC;MACAI,UAAU,CAACT,gBAAgB,CAACO,YAAD,EAAeC,MAAf,CAAjB,EAAyC,CAAzC,CAAV;MACA,OAAOA,MAAP;IACH,CAJD;EAKH,CAhJyB,CAkJ1B;;;EACA,IAAIuC,QAAQ,GAAGC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACC,cAAP,CAAsB3D,MAAtB,CAAxC;EACAyD,QAAQ,GAAGA,QAAQ,IAAIA,QAAQ,CAACtC,UAArB,GAAkCsC,QAAlC,GAA6CzD,MAAxD,CApJ0B,CAsJ1B;;EACA,IAAI,GAAG4D,QAAH,CAAY9C,IAAZ,CAAiBd,MAAM,CAACuB,OAAxB,MAAqC,kBAAzC,EAA6D;IACzD;IACAD,6BAA6B;EAEhC,CAJD,MAIO,IAAIG,iBAAiB,EAArB,EAAyB;IAC5B;IACAM,gCAAgC;EAEnC,CAJM,MAIA,IAAI/B,MAAM,CAAC6C,cAAX,EAA2B;IAC9B;IACAF,mCAAmC;EAEtC,CAJM,MAIA,IAAIrC,GAAG,IAAI,wBAAwBA,GAAG,CAAC8C,aAAJ,CAAkB,QAAlB,CAAnC,EAAgE;IACnE;IACAJ,qCAAqC;EAExC,CAJM,MAIA;IACH;IACAQ,+BAA+B;EAClC;;EAEDC,QAAQ,CAACvD,YAAT,GAAwBA,YAAxB;EACAuD,QAAQ,CAACpC,cAAT,GAA0BA,cAA1B;AACH,CA9KA,EA8KCwC,IA9KD,CAAD"},"metadata":{},"sourceType":"script"}