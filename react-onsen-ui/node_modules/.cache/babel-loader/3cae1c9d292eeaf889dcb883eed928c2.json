{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nimport util from '../../ons/util.js';\nimport styler from '../../ons/styler.js';\nimport contentReady from '../../ons/content-ready.js';\nimport BaseAnimator from '../../ons/base-animator.js';\nexport default class SplitterAnimator extends BaseAnimator {\n  constructor() {\n    let {\n      timing = 'cubic-bezier(.1, .7, .1, 1)',\n      duration = 0.3,\n      delay = 0\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      timing,\n      duration,\n      delay\n    });\n  }\n\n  updateOptions() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    util.extend(this, {\n      timing: this.timing,\n      duration: this.duration,\n      delay: this.delay\n    }, options);\n  }\n  /**\n   * @param {Element} sideElement\n   */\n\n\n  activate(sideElement) {\n    const splitter = sideElement.parentNode;\n    contentReady(splitter, () => {\n      this._side = sideElement;\n      this._oppositeSide = splitter.right !== sideElement && splitter.right || splitter.left !== sideElement && splitter.left;\n      this._content = splitter.content;\n      this._mask = splitter.mask;\n    });\n  }\n\n  deactivate() {\n    this.clearTransition();\n    this._mask && this.clearMask();\n    this._content = this._side = this._oppositeSide = this._mask = null;\n  }\n\n  get minus() {\n    return this._side.side === 'right' ? '-' : '';\n  }\n\n  clearTransition() {\n    'side mask content'.split(/\\s+/).forEach(e => this['_' + e] && styler.clear(this['_' + e], 'transform transition'));\n  }\n\n  clearMask() {\n    // Check if the other side needs the mask before clearing\n    if (!this._oppositeSide || this._oppositeSide.mode === 'split' || !this._oppositeSide.isOpen) {\n      this._mask.style.opacity = '';\n      this._mask.style.display = 'none';\n    }\n  }\n  /**\n   * @param {Number} distance\n   */\n\n\n  translate(distance) {}\n  /**\n   * @param {Function} done\n   */\n\n\n  open(done) {\n    done();\n  }\n  /**\n   * @param {Function} done\n   */\n\n\n  close(done) {\n    done();\n  }\n\n}","map":{"version":3,"names":["util","styler","contentReady","BaseAnimator","SplitterAnimator","constructor","timing","duration","delay","updateOptions","options","extend","activate","sideElement","splitter","parentNode","_side","_oppositeSide","right","left","_content","content","_mask","mask","deactivate","clearTransition","clearMask","minus","side","split","forEach","e","clear","mode","isOpen","style","opacity","display","translate","distance","open","done","close"],"sources":["C:/React-app/test/ui/node_modules/onsenui/esm/elements/ons-splitter/animator.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport util from '../../ons/util.js';\nimport styler from '../../ons/styler.js';\nimport contentReady from '../../ons/content-ready.js';\nimport BaseAnimator from '../../ons/base-animator.js';\n\nexport default class SplitterAnimator extends BaseAnimator {\n\n  constructor({timing = 'cubic-bezier(.1, .7, .1, 1)', duration = 0.3, delay = 0} = {}) {\n    super({ timing, duration, delay });\n  }\n\n  updateOptions(options = {}) {\n    util.extend(this, {\n      timing: this.timing, duration: this.duration, delay: this.delay\n    }, options);\n  }\n\n  /**\n   * @param {Element} sideElement\n   */\n  activate(sideElement) {\n    const splitter = sideElement.parentNode;\n\n    contentReady(splitter, () => {\n      this._side = sideElement;\n      this._oppositeSide = splitter.right !== sideElement && splitter.right || splitter.left !== sideElement && splitter.left;\n      this._content = splitter.content;\n      this._mask = splitter.mask;\n    });\n  }\n\n  deactivate() {\n    this.clearTransition();\n    this._mask && this.clearMask();\n    this._content = this._side = this._oppositeSide = this._mask = null;\n  }\n\n  get minus() {\n    return this._side.side === 'right' ? '-' : '';\n  }\n\n  clearTransition() {\n    'side mask content'.split(/\\s+/)\n      .forEach(e => this['_' + e] && styler.clear(this['_' + e], 'transform transition'));\n  }\n\n  clearMask() {\n    // Check if the other side needs the mask before clearing\n    if (!this._oppositeSide || this._oppositeSide.mode === 'split' || !this._oppositeSide.isOpen) {\n      this._mask.style.opacity = '';\n      this._mask.style.display = 'none';\n    }\n  }\n\n  /**\n   * @param {Number} distance\n   */\n  translate(distance) {\n\n  }\n\n  /**\n   * @param {Function} done\n   */\n  open(done) {\n    done();\n  }\n\n  /**\n   * @param {Function} done\n   */\n  close(done) {\n    done();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,YAA/B,CAA4C;EAEzDE,WAAW,GAA2E;IAAA,IAA1E;MAACC,MAAM,GAAG,6BAAV;MAAyCC,QAAQ,GAAG,GAApD;MAAyDC,KAAK,GAAG;IAAjE,CAA0E,uEAAJ,EAAI;IACpF,MAAM;MAAEF,MAAF;MAAUC,QAAV;MAAoBC;IAApB,CAAN;EACD;;EAEDC,aAAa,GAAe;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC1BV,IAAI,CAACW,MAAL,CAAY,IAAZ,EAAkB;MAChBL,MAAM,EAAE,KAAKA,MADG;MACKC,QAAQ,EAAE,KAAKA,QADpB;MAC8BC,KAAK,EAAE,KAAKA;IAD1C,CAAlB,EAEGE,OAFH;EAGD;EAED;AACF;AACA;;;EACEE,QAAQ,CAACC,WAAD,EAAc;IACpB,MAAMC,QAAQ,GAAGD,WAAW,CAACE,UAA7B;IAEAb,YAAY,CAACY,QAAD,EAAW,MAAM;MAC3B,KAAKE,KAAL,GAAaH,WAAb;MACA,KAAKI,aAAL,GAAqBH,QAAQ,CAACI,KAAT,KAAmBL,WAAnB,IAAkCC,QAAQ,CAACI,KAA3C,IAAoDJ,QAAQ,CAACK,IAAT,KAAkBN,WAAlB,IAAiCC,QAAQ,CAACK,IAAnH;MACA,KAAKC,QAAL,GAAgBN,QAAQ,CAACO,OAAzB;MACA,KAAKC,KAAL,GAAaR,QAAQ,CAACS,IAAtB;IACD,CALW,CAAZ;EAMD;;EAEDC,UAAU,GAAG;IACX,KAAKC,eAAL;IACA,KAAKH,KAAL,IAAc,KAAKI,SAAL,EAAd;IACA,KAAKN,QAAL,GAAgB,KAAKJ,KAAL,GAAa,KAAKC,aAAL,GAAqB,KAAKK,KAAL,GAAa,IAA/D;EACD;;EAEQ,IAALK,KAAK,GAAG;IACV,OAAO,KAAKX,KAAL,CAAWY,IAAX,KAAoB,OAApB,GAA8B,GAA9B,GAAoC,EAA3C;EACD;;EAEDH,eAAe,GAAG;IAChB,oBAAoBI,KAApB,CAA0B,KAA1B,EACGC,OADH,CACWC,CAAC,IAAI,KAAK,MAAMA,CAAX,KAAiB9B,MAAM,CAAC+B,KAAP,CAAa,KAAK,MAAMD,CAAX,CAAb,EAA4B,sBAA5B,CADjC;EAED;;EAEDL,SAAS,GAAG;IACV;IACA,IAAI,CAAC,KAAKT,aAAN,IAAuB,KAAKA,aAAL,CAAmBgB,IAAnB,KAA4B,OAAnD,IAA8D,CAAC,KAAKhB,aAAL,CAAmBiB,MAAtF,EAA8F;MAC5F,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,OAAjB,GAA2B,EAA3B;MACA,KAAKd,KAAL,CAAWa,KAAX,CAAiBE,OAAjB,GAA2B,MAA3B;IACD;EACF;EAED;AACF;AACA;;;EACEC,SAAS,CAACC,QAAD,EAAW,CAEnB;EAED;AACF;AACA;;;EACEC,IAAI,CAACC,IAAD,EAAO;IACTA,IAAI;EACL;EAED;AACF;AACA;;;EACEC,KAAK,CAACD,IAAD,EAAO;IACVA,IAAI;EACL;;AApEwD"},"metadata":{},"sourceType":"module"}