{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport AnimatorFactory from '../ons/internal/animator-factory.js';\nimport OverlaySplitterAnimator from './ons-splitter/overlay-animator.js';\nimport PushSplitterAnimator from './ons-splitter/push-animator.js';\nimport RevealSplitterAnimator from './ons-splitter/reveal-animator.js';\nimport BaseElement from './base/base-element.js';\nimport deviceBackButtonDispatcher from '../ons/internal/device-back-button-dispatcher.js';\nimport contentReady from '../ons/content-ready.js';\nconst _animatorDict = {\n  default: OverlaySplitterAnimator,\n  overlay: OverlaySplitterAnimator,\n  push: PushSplitterAnimator,\n  reveal: RevealSplitterAnimator\n};\n/**\n * @element ons-splitter\n * @category menu\n * @description\n *  [en]\n *    A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\n *\n *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\n *  [/en]\n *  [ja][/ja]\n * @codepen rOQOML\n * @tutorial vanilla/Reference/splitter\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-splitter-content\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\n *  [ja]ons-splitter-contentコンポーネント[/ja]\n * @seealso ons-splitter-side\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\n *  [ja]ons-splitter-sideコンポーネント[/ja]\n * @example\n * <ons-splitter id=\"splitter\">\n *   <ons-splitter-content>\n *     ...\n *   </ons-splitter-content>\n *\n *   <ons-splitter-side side=\"left\" width=\"80%\" collapse swipeable>\n *     ...\n *   </ons-splitter-side>\n * </ons-splitter>\n *\n * <script>\n *   var splitter = document.getElementById('splitter');\n *   splitter.left.open();\n * </script>\n */\n\nexport default class SplitterElement extends BaseElement {\n  _getSide(side) {\n    const element = util.findChild(this, e => {\n      return util.match(e, 'ons-splitter-side') && e.getAttribute('side') === side;\n    });\n    return element;\n  }\n  /**\n   * @property left\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]Left `<ons-splitter-side>` element.[/en]\n   *   [ja][/ja]\n   */\n\n\n  get left() {\n    return this._getSide('left');\n  }\n  /**\n   * @property right\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]Right `<ons-splitter-side>` element.[/en]\n   *   [ja][/ja]\n   */\n\n\n  get right() {\n    return this._getSide('right');\n  }\n  /**\n   * @property side\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]First `<ons-splitter-side>` element regardless the actual side.[/en]\n   *   [ja][/ja]\n   */\n\n\n  get side() {\n    return util.findChild(this, 'ons-splitter-side');\n  }\n\n  get _sides() {\n    return [this.left, this.right].filter(e => e);\n  }\n  /**\n   * @property content\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]The `<ons-splitter-content>` element.[/en]\n   *   [ja][/ja]\n   */\n\n\n  get content() {\n    return util.findChild(this, 'ons-splitter-content');\n  }\n\n  get topPage() {\n    return this.content._content;\n  }\n\n  get mask() {\n    return util.findChild(this, 'ons-splitter-mask');\n  }\n  /**\n   * @property onDeviceBackButton\n   * @type {Object}\n   * @description\n   *   [en]Back-button handler.[/en]\n   *   [ja]バックボタンハンドラ。[/ja]\n   */\n\n\n  get onDeviceBackButton() {\n    return this._backButtonHandler;\n  }\n\n  set onDeviceBackButton(callback) {\n    if (this._backButtonHandler) {\n      this._backButtonHandler.destroy();\n    }\n\n    this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n  }\n\n  _onDeviceBackButton(event) {\n    this._sides.some(s => s.isOpen ? s.close() : false) || event.callParentHandler();\n  }\n\n  _onModeChange(e) {\n    if (e.target.parentNode) {\n      contentReady(this, () => {\n        this._layout();\n      });\n    }\n  }\n\n  _layout() {\n    this._sides.forEach(side => {\n      if (this.content) {\n        this.content.style[side.side] = side.mode === 'split' ? side.style.width : 0;\n      }\n    });\n  }\n\n  constructor() {\n    super();\n    this._onModeChange = this._onModeChange.bind(this);\n    contentReady(this, () => {\n      !this.mask && this.appendChild(document.createElement('ons-splitter-mask'));\n\n      this._layout();\n    });\n  }\n\n  connectedCallback() {\n    this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\n    this.addEventListener('modechange', this._onModeChange, false);\n  }\n\n  disconnectedCallback() {\n    this._backButtonHandler.destroy();\n\n    this._backButtonHandler = null;\n    this.removeEventListener('modechange', this._onModeChange, false);\n  }\n\n  attributeChangedCallback(name, last, current) {}\n\n  _show() {\n    util.propagateAction(this, '_show');\n  }\n\n  _hide() {\n    util.propagateAction(this, '_hide');\n  }\n\n  _destroy() {\n    util.propagateAction(this, '_destroy');\n    this.remove();\n  }\n\n  static registerAnimator(name, Animator) {\n    if (!(Animator instanceof SplitterAnimator)) {\n      util.throwAnimator('Splitter');\n    }\n\n    _animatorDict[name] = Animator;\n  }\n\n  static get SplitterAnimator() {\n    return SplitterAnimator;\n  }\n\n  static get animators() {\n    return _animatorDict;\n  }\n\n}\nonsElements.Splitter = SplitterElement;\ncustomElements.define('ons-splitter', SplitterElement);","map":{"version":3,"names":["onsElements","util","ModifierUtil","AnimatorFactory","OverlaySplitterAnimator","PushSplitterAnimator","RevealSplitterAnimator","BaseElement","deviceBackButtonDispatcher","contentReady","_animatorDict","default","overlay","push","reveal","SplitterElement","_getSide","side","element","findChild","e","match","getAttribute","left","right","_sides","filter","content","topPage","_content","mask","onDeviceBackButton","_backButtonHandler","callback","destroy","createHandler","_onDeviceBackButton","event","some","s","isOpen","close","callParentHandler","_onModeChange","target","parentNode","_layout","forEach","style","mode","width","constructor","bind","appendChild","document","createElement","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","attributeChangedCallback","name","last","current","_show","propagateAction","_hide","_destroy","remove","registerAnimator","Animator","SplitterAnimator","throwAnimator","animators","Splitter","customElements","define"],"sources":["C:/React-app/test/ui/node_modules/onsenui/esm/elements/ons-splitter.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport AnimatorFactory from '../ons/internal/animator-factory.js';\nimport OverlaySplitterAnimator from './ons-splitter/overlay-animator.js';\nimport PushSplitterAnimator from './ons-splitter/push-animator.js';\nimport RevealSplitterAnimator from './ons-splitter/reveal-animator.js';\nimport BaseElement from './base/base-element.js';\nimport deviceBackButtonDispatcher from '../ons/internal/device-back-button-dispatcher.js';\nimport contentReady from '../ons/content-ready.js';\n\nconst _animatorDict = {\n  default: OverlaySplitterAnimator,\n  overlay: OverlaySplitterAnimator,\n  push: PushSplitterAnimator,\n  reveal: RevealSplitterAnimator\n};\n\n/**\n * @element ons-splitter\n * @category menu\n * @description\n *  [en]\n *    A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\n *\n *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\n *  [/en]\n *  [ja][/ja]\n * @codepen rOQOML\n * @tutorial vanilla/Reference/splitter\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-splitter-content\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\n *  [ja]ons-splitter-contentコンポーネント[/ja]\n * @seealso ons-splitter-side\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\n *  [ja]ons-splitter-sideコンポーネント[/ja]\n * @example\n * <ons-splitter id=\"splitter\">\n *   <ons-splitter-content>\n *     ...\n *   </ons-splitter-content>\n *\n *   <ons-splitter-side side=\"left\" width=\"80%\" collapse swipeable>\n *     ...\n *   </ons-splitter-side>\n * </ons-splitter>\n *\n * <script>\n *   var splitter = document.getElementById('splitter');\n *   splitter.left.open();\n * </script>\n */\nexport default class SplitterElement extends BaseElement {\n\n  _getSide(side) {\n    const element = util.findChild(this, e => {\n      return util.match(e, 'ons-splitter-side') && e.getAttribute('side') === side;\n    });\n    return element;\n  }\n\n  /**\n   * @property left\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]Left `<ons-splitter-side>` element.[/en]\n   *   [ja][/ja]\n   */\n  get left() {\n    return this._getSide('left');\n  }\n  /**\n   * @property right\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]Right `<ons-splitter-side>` element.[/en]\n   *   [ja][/ja]\n   */\n  get right() {\n    return this._getSide('right');\n  }\n\n  /**\n   * @property side\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]First `<ons-splitter-side>` element regardless the actual side.[/en]\n   *   [ja][/ja]\n   */\n  get side() {\n    return util.findChild(this, 'ons-splitter-side');\n  }\n\n  get _sides() {\n    return [this.left, this.right].filter(e => e);\n  }\n  /**\n   * @property content\n   * @readonly\n   * @type {HTMLElement}\n   * @description\n   *   [en]The `<ons-splitter-content>` element.[/en]\n   *   [ja][/ja]\n   */\n  get content() {\n    return util.findChild(this, 'ons-splitter-content');\n  }\n\n  get topPage() {\n    return this.content._content;\n  }\n\n  get mask() {\n    return util.findChild(this, 'ons-splitter-mask');\n  }\n\n  /**\n   * @property onDeviceBackButton\n   * @type {Object}\n   * @description\n   *   [en]Back-button handler.[/en]\n   *   [ja]バックボタンハンドラ。[/ja]\n   */\n  get onDeviceBackButton() {\n    return this._backButtonHandler;\n  }\n\n  set onDeviceBackButton(callback) {\n    if (this._backButtonHandler) {\n      this._backButtonHandler.destroy();\n    }\n\n    this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n  }\n\n  _onDeviceBackButton(event) {\n    this._sides.some(s => s.isOpen ? s.close() : false) || event.callParentHandler();\n  }\n\n  _onModeChange(e) {\n    if (e.target.parentNode) {\n      contentReady(this, () => {\n        this._layout();\n      });\n    }\n  }\n\n  _layout() {\n    this._sides.forEach(side => {\n      if (this.content) {\n        this.content.style[side.side] = side.mode === 'split' ? side.style.width : 0;\n      }\n    });\n  }\n\n  constructor() {\n    super();\n\n    this._onModeChange = this._onModeChange.bind(this);\n\n    contentReady(this, () => {\n      !this.mask && this.appendChild(document.createElement('ons-splitter-mask'));\n      this._layout();\n    });\n  }\n\n  connectedCallback() {\n    this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\n    this.addEventListener('modechange', this._onModeChange, false);\n  }\n\n  disconnectedCallback() {\n    this._backButtonHandler.destroy();\n    this._backButtonHandler = null;\n    this.removeEventListener('modechange', this._onModeChange, false);\n  }\n\n  attributeChangedCallback(name, last, current) {}\n\n  _show() {\n    util.propagateAction(this, '_show');\n  }\n\n  _hide() {\n    util.propagateAction(this, '_hide');\n  }\n\n  _destroy() {\n    util.propagateAction(this, '_destroy');\n    this.remove();\n  }\n\n  static registerAnimator(name, Animator) {\n    if (!(Animator instanceof SplitterAnimator)) {\n      util.throwAnimator('Splitter');\n    }\n    _animatorDict[name] = Animator;\n  }\n\n  static get SplitterAnimator() {\n    return SplitterAnimator;\n  }\n\n  static get animators() {\n    return _animatorDict;\n  }\n}\n\nonsElements.Splitter = SplitterElement;\ncustomElements.define('ons-splitter', SplitterElement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}