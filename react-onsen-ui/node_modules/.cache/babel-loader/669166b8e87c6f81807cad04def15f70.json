{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nimport util from './util.js';\nimport MicroEvent from './microevent.js';\nconst softwareKeyboard = new MicroEvent();\nsoftwareKeyboard._visible = false;\n\nconst onShow = () => {\n  softwareKeyboard._visible = true;\n  softwareKeyboard.emit('show');\n};\n\nconst onHide = () => {\n  softwareKeyboard._visible = false;\n  softwareKeyboard.emit('hide');\n};\n\nconst bindEvents = () => {\n  if (typeof Keyboard !== 'undefined') {\n    // https://github.com/martinmose/cordova-keyboard/blob/95f3da3a38d8f8e1fa41fbf40145352c13535a00/README.md\n    Keyboard.onshow = onShow;\n    Keyboard.onhide = onHide;\n    softwareKeyboard.emit('init', {\n      visible: Keyboard.isVisible\n    });\n    return true;\n  } else if (typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.Keyboard !== 'undefined') {\n    // https://github.com/driftyco/ionic-plugins-keyboard/blob/ca27ecf/README.md\n    window.addEventListener('native.keyboardshow', onShow);\n    window.addEventListener('native.keyboardhide', onHide);\n    softwareKeyboard.emit('init', {\n      visible: cordova.plugins.Keyboard.isVisible\n    });\n    return true;\n  }\n\n  return false;\n};\n\nconst noPluginError = () => {\n  util.warn('ons-keyboard: Cordova Keyboard plugin is not present.');\n};\n\ndocument.addEventListener('deviceready', () => {\n  if (!bindEvents()) {\n    if (document.querySelector('[ons-keyboard-active]') || document.querySelector('[ons-keyboard-inactive]')) {\n      noPluginError();\n    }\n\n    softwareKeyboard.on = noPluginError;\n  }\n});\nexport default softwareKeyboard;","map":{"version":3,"names":["util","MicroEvent","softwareKeyboard","_visible","onShow","emit","onHide","bindEvents","Keyboard","onshow","onhide","visible","isVisible","cordova","plugins","window","addEventListener","noPluginError","warn","document","querySelector","on"],"sources":["C:/React-app/test/ui/node_modules/onsenui/esm/ons/software-keyboard.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport util from './util.js';\nimport MicroEvent from './microevent.js';\n\nconst softwareKeyboard = new MicroEvent();\nsoftwareKeyboard._visible = false;\n\nconst onShow = () => {\n  softwareKeyboard._visible = true;\n  softwareKeyboard.emit('show');\n};\n\nconst onHide = () => {\n  softwareKeyboard._visible = false;\n  softwareKeyboard.emit('hide');\n};\n\nconst bindEvents = () => {\n  if (typeof Keyboard !== 'undefined') {\n    // https://github.com/martinmose/cordova-keyboard/blob/95f3da3a38d8f8e1fa41fbf40145352c13535a00/README.md\n    Keyboard.onshow = onShow;\n    Keyboard.onhide = onHide;\n    softwareKeyboard.emit('init', {visible: Keyboard.isVisible});\n\n    return true;\n  } else if (typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.Keyboard !== 'undefined') {\n    // https://github.com/driftyco/ionic-plugins-keyboard/blob/ca27ecf/README.md\n    window.addEventListener('native.keyboardshow', onShow);\n    window.addEventListener('native.keyboardhide', onHide);\n    softwareKeyboard.emit('init', {visible: cordova.plugins.Keyboard.isVisible});\n\n    return true;\n  }\n\n  return false;\n};\n\nconst noPluginError = () => {\n  util.warn('ons-keyboard: Cordova Keyboard plugin is not present.');\n};\n\ndocument.addEventListener('deviceready', () => {\n  if (!bindEvents()) {\n    if (document.querySelector('[ons-keyboard-active]') ||\n      document.querySelector('[ons-keyboard-inactive]')) {\n      noPluginError();\n    }\n\n    softwareKeyboard.on = noPluginError;\n  }\n});\n\nexport default softwareKeyboard;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,MAAMC,gBAAgB,GAAG,IAAID,UAAJ,EAAzB;AACAC,gBAAgB,CAACC,QAAjB,GAA4B,KAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAM;EACnBF,gBAAgB,CAACC,QAAjB,GAA4B,IAA5B;EACAD,gBAAgB,CAACG,IAAjB,CAAsB,MAAtB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAM;EACnBJ,gBAAgB,CAACC,QAAjB,GAA4B,KAA5B;EACAD,gBAAgB,CAACG,IAAjB,CAAsB,MAAtB;AACD,CAHD;;AAKA,MAAME,UAAU,GAAG,MAAM;EACvB,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;IACnC;IACAA,QAAQ,CAACC,MAAT,GAAkBL,MAAlB;IACAI,QAAQ,CAACE,MAAT,GAAkBJ,MAAlB;IACAJ,gBAAgB,CAACG,IAAjB,CAAsB,MAAtB,EAA8B;MAACM,OAAO,EAAEH,QAAQ,CAACI;IAAnB,CAA9B;IAEA,OAAO,IAAP;EACD,CAPD,MAOO,IAAI,OAAOC,OAAO,CAACC,OAAf,KAA2B,WAA3B,IAA0C,OAAOD,OAAO,CAACC,OAAR,CAAgBN,QAAvB,KAAoC,WAAlF,EAA+F;IACpG;IACAO,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+CZ,MAA/C;IACAW,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+CV,MAA/C;IACAJ,gBAAgB,CAACG,IAAjB,CAAsB,MAAtB,EAA8B;MAACM,OAAO,EAAEE,OAAO,CAACC,OAAR,CAAgBN,QAAhB,CAAyBI;IAAnC,CAA9B;IAEA,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD,CAlBD;;AAoBA,MAAMK,aAAa,GAAG,MAAM;EAC1BjB,IAAI,CAACkB,IAAL,CAAU,uDAAV;AACD,CAFD;;AAIAC,QAAQ,CAACH,gBAAT,CAA0B,aAA1B,EAAyC,MAAM;EAC7C,IAAI,CAACT,UAAU,EAAf,EAAmB;IACjB,IAAIY,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,KACFD,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CADF,EACqD;MACnDH,aAAa;IACd;;IAEDf,gBAAgB,CAACmB,EAAjB,GAAsBJ,aAAtB;EACD;AACF,CATD;AAWA,eAAef,gBAAf"},"metadata":{},"sourceType":"module"}