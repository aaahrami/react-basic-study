{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n// @version 0.7.22\n(function (global) {\n  if (global.JsMutationObserver) {\n    return;\n  }\n\n  var registrationsTable = new WeakMap();\n  var setImmediate;\n\n  if (/Trident|Edge/.test(navigator.userAgent)) {\n    setImmediate = setTimeout;\n  } else if (window.setImmediate) {\n    setImmediate = window.setImmediate;\n  } else {\n    var setImmediateQueue = [];\n    var sentinel = String(Math.random());\n    window.addEventListener(\"message\", function (e) {\n      if (e.data === sentinel) {\n        var queue = setImmediateQueue;\n        setImmediateQueue = [];\n        queue.forEach(function (func) {\n          func();\n        });\n      }\n    });\n\n    setImmediate = function (func) {\n      setImmediateQueue.push(func);\n      window.postMessage(sentinel, \"*\");\n    };\n  }\n\n  var isScheduled = false;\n  var scheduledObservers = [];\n\n  function scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n\n    if (!isScheduled) {\n      isScheduled = true;\n      setImmediate(dispatchCallbacks);\n    }\n  }\n\n  function wrapIfNeeded(node) {\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\n  }\n\n  function dispatchCallbacks() {\n    isScheduled = false;\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    observers.sort(function (o1, o2) {\n      return o1.uid_ - o2.uid_;\n    });\n    var anyNonEmpty = false;\n    observers.forEach(function (observer) {\n      var queue = observer.takeRecords();\n      removeTransientObserversFor(observer);\n\n      if (queue.length) {\n        observer.callback_(queue, observer);\n        anyNonEmpty = true;\n      }\n    });\n    if (anyNonEmpty) dispatchCallbacks();\n  }\n\n  function removeTransientObserversFor(observer) {\n    observer.nodes_.forEach(function (node) {\n      var registrations = registrationsTable.get(node);\n      if (!registrations) return;\n      registrations.forEach(function (registration) {\n        if (registration.observer === observer) registration.removeTransientObservers();\n      });\n    });\n  }\n\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n      var registrations = registrationsTable.get(node);\n\n      if (registrations) {\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n          if (node !== target && !options.subtree) continue;\n          var record = callback(options);\n          if (record) registration.enqueue(record);\n        }\n      }\n    }\n  }\n\n  var uidCounter = 0;\n\n  function JsMutationObserver(callback) {\n    this.callback_ = callback;\n    this.nodes_ = [];\n    this.records_ = [];\n    this.uid_ = ++uidCounter;\n  }\n\n  JsMutationObserver.prototype = {\n    observe: function (target, options) {\n      target = wrapIfNeeded(target);\n\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\n        throw new SyntaxError();\n      }\n\n      var registrations = registrationsTable.get(target);\n      if (!registrations) registrationsTable.set(target, registrations = []);\n      var registration;\n\n      for (var i = 0; i < registrations.length; i++) {\n        if (registrations[i].observer === this) {\n          registration = registrations[i];\n          registration.removeListeners();\n          registration.options = options;\n          break;\n        }\n      }\n\n      if (!registration) {\n        registration = new Registration(this, target, options);\n        registrations.push(registration);\n        this.nodes_.push(target);\n      }\n\n      registration.addListeners();\n    },\n    disconnect: function () {\n      this.nodes_.forEach(function (node) {\n        var registrations = registrationsTable.get(node);\n\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n\n          if (registration.observer === this) {\n            registration.removeListeners();\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n      this.records_ = [];\n    },\n    takeRecords: function () {\n      var copyOfRecords = this.records_;\n      this.records_ = [];\n      return copyOfRecords;\n    }\n  };\n\n  function MutationRecord(type, target) {\n    this.type = type;\n    this.target = target;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.attributeName = null;\n    this.attributeNamespace = null;\n    this.oldValue = null;\n  }\n\n  function copyMutationRecord(original) {\n    var record = new MutationRecord(original.type, original.target);\n    record.addedNodes = original.addedNodes.slice();\n    record.removedNodes = original.removedNodes.slice();\n    record.previousSibling = original.previousSibling;\n    record.nextSibling = original.nextSibling;\n    record.attributeName = original.attributeName;\n    record.attributeNamespace = original.attributeNamespace;\n    record.oldValue = original.oldValue;\n    return record;\n  }\n\n  var currentRecord, recordWithOldValue;\n\n  function getRecord(type, target) {\n    return currentRecord = new MutationRecord(type, target);\n  }\n\n  function getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue) return recordWithOldValue;\n    recordWithOldValue = copyMutationRecord(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n  }\n\n  function clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n  }\n\n  function recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n  }\n\n  function selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord) return lastRecord;\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\n    return null;\n  }\n\n  function Registration(observer, target, options) {\n    this.observer = observer;\n    this.target = target;\n    this.options = options;\n    this.transientObservedNodes = [];\n  }\n\n  Registration.prototype = {\n    enqueue: function (record) {\n      var records = this.observer.records_;\n      var length = records.length;\n\n      if (records.length > 0) {\n        var lastRecord = records[length - 1];\n        var recordToReplaceLast = selectRecord(lastRecord, record);\n\n        if (recordToReplaceLast) {\n          records[length - 1] = recordToReplaceLast;\n          return;\n        }\n      } else {\n        scheduleCallback(this.observer);\n      }\n\n      records[length] = record;\n    },\n    addListeners: function () {\n      this.addListeners_(this.target);\n    },\n    addListeners_: function (node) {\n      var options = this.options;\n      if (options.attributes) node.addEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.addEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.addEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.addEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    removeListeners: function () {\n      this.removeListeners_(this.target);\n    },\n    removeListeners_: function (node) {\n      var options = this.options;\n      if (options.attributes) node.removeEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.removeEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.removeEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.removeEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    addTransientObserver: function (node) {\n      if (node === this.target) return;\n      this.addListeners_(node);\n      this.transientObservedNodes.push(node);\n      var registrations = registrationsTable.get(node);\n      if (!registrations) registrationsTable.set(node, registrations = []);\n      registrations.push(this);\n    },\n    removeTransientObservers: function () {\n      var transientObservedNodes = this.transientObservedNodes;\n      this.transientObservedNodes = [];\n      transientObservedNodes.forEach(function (node) {\n        this.removeListeners_(node);\n        var registrations = registrationsTable.get(node);\n\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i] === this) {\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n    },\n    handleEvent: function (e) {\n      e.stopImmediatePropagation();\n\n      switch (e.type) {\n        case \"DOMAttrModified\":\n          var name = e.attrName;\n          var namespace = e.relatedNode.namespaceURI;\n          var target = e.target;\n          var record = new getRecord(\"attributes\", target);\n          record.attributeName = name;\n          record.attributeNamespace = namespace;\n          var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n          forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n            if (!options.attributes) return;\n\n            if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\n              return;\n            }\n\n            if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\n            return record;\n          });\n          break;\n\n        case \"DOMCharacterDataModified\":\n          var target = e.target;\n          var record = getRecord(\"characterData\", target);\n          var oldValue = e.prevValue;\n          forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n            if (!options.characterData) return;\n            if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\n            return record;\n          });\n          break;\n\n        case \"DOMNodeRemoved\":\n          this.addTransientObserver(e.target);\n\n        case \"DOMNodeInserted\":\n          var changedNode = e.target;\n          var addedNodes, removedNodes;\n\n          if (e.type === \"DOMNodeInserted\") {\n            addedNodes = [changedNode];\n            removedNodes = [];\n          } else {\n            addedNodes = [];\n            removedNodes = [changedNode];\n          }\n\n          var previousSibling = changedNode.previousSibling;\n          var nextSibling = changedNode.nextSibling;\n          var record = getRecord(\"childList\", e.target.parentNode);\n          record.addedNodes = addedNodes;\n          record.removedNodes = removedNodes;\n          record.previousSibling = previousSibling;\n          record.nextSibling = nextSibling;\n          forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function (options) {\n            if (!options.childList) return;\n            return record;\n          });\n      }\n\n      clearRecords();\n    }\n  };\n  global.JsMutationObserver = JsMutationObserver;\n\n  if (!global.MutationObserver) {\n    global.MutationObserver = JsMutationObserver;\n    JsMutationObserver._isPolyfilled = true;\n  }\n})(self);","map":{"version":3,"names":["global","JsMutationObserver","registrationsTable","WeakMap","setImmediate","test","navigator","userAgent","setTimeout","window","setImmediateQueue","sentinel","String","Math","random","addEventListener","e","data","queue","forEach","func","push","postMessage","isScheduled","scheduledObservers","scheduleCallback","observer","dispatchCallbacks","wrapIfNeeded","node","ShadowDOMPolyfill","observers","sort","o1","o2","uid_","anyNonEmpty","takeRecords","removeTransientObserversFor","length","callback_","nodes_","registrations","get","registration","removeTransientObservers","forEachAncestorAndObserverEnqueueRecord","target","callback","parentNode","j","options","subtree","record","enqueue","uidCounter","records_","prototype","observe","childList","attributes","characterData","attributeOldValue","attributeFilter","characterDataOldValue","SyntaxError","set","i","removeListeners","Registration","addListeners","disconnect","splice","copyOfRecords","MutationRecord","type","addedNodes","removedNodes","previousSibling","nextSibling","attributeName","attributeNamespace","oldValue","copyMutationRecord","original","slice","currentRecord","recordWithOldValue","getRecord","getRecordWithOldValue","clearRecords","undefined","recordRepresentsCurrentMutation","selectRecord","lastRecord","newRecord","transientObservedNodes","records","recordToReplaceLast","addListeners_","removeListeners_","removeEventListener","addTransientObserver","handleEvent","stopImmediatePropagation","name","attrName","namespace","relatedNode","namespaceURI","attrChange","MutationEvent","ADDITION","prevValue","indexOf","changedNode","MutationObserver","_isPolyfilled","self"],"sources":["C:/React-app/test/ui/node_modules/onsenui/esm/polyfills/MutationObserver@0.7.22/MutationObserver.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n// @version 0.7.22\n\n(function(global) {\n  if (global.JsMutationObserver) {\n    return;\n  }\n  var registrationsTable = new WeakMap();\n  var setImmediate;\n  if (/Trident|Edge/.test(navigator.userAgent)) {\n    setImmediate = setTimeout;\n  } else if (window.setImmediate) {\n    setImmediate = window.setImmediate;\n  } else {\n    var setImmediateQueue = [];\n    var sentinel = String(Math.random());\n    window.addEventListener(\"message\", function(e) {\n      if (e.data === sentinel) {\n        var queue = setImmediateQueue;\n        setImmediateQueue = [];\n        queue.forEach(function(func) {\n          func();\n        });\n      }\n    });\n    setImmediate = function(func) {\n      setImmediateQueue.push(func);\n      window.postMessage(sentinel, \"*\");\n    };\n  }\n  var isScheduled = false;\n  var scheduledObservers = [];\n  function scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n    if (!isScheduled) {\n      isScheduled = true;\n      setImmediate(dispatchCallbacks);\n    }\n  }\n  function wrapIfNeeded(node) {\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\n  }\n  function dispatchCallbacks() {\n    isScheduled = false;\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    observers.sort(function(o1, o2) {\n      return o1.uid_ - o2.uid_;\n    });\n    var anyNonEmpty = false;\n    observers.forEach(function(observer) {\n      var queue = observer.takeRecords();\n      removeTransientObserversFor(observer);\n      if (queue.length) {\n        observer.callback_(queue, observer);\n        anyNonEmpty = true;\n      }\n    });\n    if (anyNonEmpty) dispatchCallbacks();\n  }\n  function removeTransientObserversFor(observer) {\n    observer.nodes_.forEach(function(node) {\n      var registrations = registrationsTable.get(node);\n      if (!registrations) return;\n      registrations.forEach(function(registration) {\n        if (registration.observer === observer) registration.removeTransientObservers();\n      });\n    });\n  }\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n      var registrations = registrationsTable.get(node);\n      if (registrations) {\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n          if (node !== target && !options.subtree) continue;\n          var record = callback(options);\n          if (record) registration.enqueue(record);\n        }\n      }\n    }\n  }\n  var uidCounter = 0;\n  function JsMutationObserver(callback) {\n    this.callback_ = callback;\n    this.nodes_ = [];\n    this.records_ = [];\n    this.uid_ = ++uidCounter;\n  }\n  JsMutationObserver.prototype = {\n    observe: function(target, options) {\n      target = wrapIfNeeded(target);\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\n        throw new SyntaxError();\n      }\n      var registrations = registrationsTable.get(target);\n      if (!registrations) registrationsTable.set(target, registrations = []);\n      var registration;\n      for (var i = 0; i < registrations.length; i++) {\n        if (registrations[i].observer === this) {\n          registration = registrations[i];\n          registration.removeListeners();\n          registration.options = options;\n          break;\n        }\n      }\n      if (!registration) {\n        registration = new Registration(this, target, options);\n        registrations.push(registration);\n        this.nodes_.push(target);\n      }\n      registration.addListeners();\n    },\n    disconnect: function() {\n      this.nodes_.forEach(function(node) {\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n          if (registration.observer === this) {\n            registration.removeListeners();\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n      this.records_ = [];\n    },\n    takeRecords: function() {\n      var copyOfRecords = this.records_;\n      this.records_ = [];\n      return copyOfRecords;\n    }\n  };\n  function MutationRecord(type, target) {\n    this.type = type;\n    this.target = target;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.attributeName = null;\n    this.attributeNamespace = null;\n    this.oldValue = null;\n  }\n  function copyMutationRecord(original) {\n    var record = new MutationRecord(original.type, original.target);\n    record.addedNodes = original.addedNodes.slice();\n    record.removedNodes = original.removedNodes.slice();\n    record.previousSibling = original.previousSibling;\n    record.nextSibling = original.nextSibling;\n    record.attributeName = original.attributeName;\n    record.attributeNamespace = original.attributeNamespace;\n    record.oldValue = original.oldValue;\n    return record;\n  }\n  var currentRecord, recordWithOldValue;\n  function getRecord(type, target) {\n    return currentRecord = new MutationRecord(type, target);\n  }\n  function getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue) return recordWithOldValue;\n    recordWithOldValue = copyMutationRecord(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n  }\n  function clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n  }\n  function recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n  }\n  function selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord) return lastRecord;\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\n    return null;\n  }\n  function Registration(observer, target, options) {\n    this.observer = observer;\n    this.target = target;\n    this.options = options;\n    this.transientObservedNodes = [];\n  }\n  Registration.prototype = {\n    enqueue: function(record) {\n      var records = this.observer.records_;\n      var length = records.length;\n      if (records.length > 0) {\n        var lastRecord = records[length - 1];\n        var recordToReplaceLast = selectRecord(lastRecord, record);\n        if (recordToReplaceLast) {\n          records[length - 1] = recordToReplaceLast;\n          return;\n        }\n      } else {\n        scheduleCallback(this.observer);\n      }\n      records[length] = record;\n    },\n    addListeners: function() {\n      this.addListeners_(this.target);\n    },\n    addListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes) node.addEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.addEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.addEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.addEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    removeListeners: function() {\n      this.removeListeners_(this.target);\n    },\n    removeListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes) node.removeEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.removeEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.removeEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.removeEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    addTransientObserver: function(node) {\n      if (node === this.target) return;\n      this.addListeners_(node);\n      this.transientObservedNodes.push(node);\n      var registrations = registrationsTable.get(node);\n      if (!registrations) registrationsTable.set(node, registrations = []);\n      registrations.push(this);\n    },\n    removeTransientObservers: function() {\n      var transientObservedNodes = this.transientObservedNodes;\n      this.transientObservedNodes = [];\n      transientObservedNodes.forEach(function(node) {\n        this.removeListeners_(node);\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i] === this) {\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n    },\n    handleEvent: function(e) {\n      e.stopImmediatePropagation();\n      switch (e.type) {\n       case \"DOMAttrModified\":\n        var name = e.attrName;\n        var namespace = e.relatedNode.namespaceURI;\n        var target = e.target;\n        var record = new getRecord(\"attributes\", target);\n        record.attributeName = name;\n        record.attributeNamespace = namespace;\n        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n          if (!options.attributes) return;\n          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\n            return;\n          }\n          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\n          return record;\n        });\n        break;\n\n       case \"DOMCharacterDataModified\":\n        var target = e.target;\n        var record = getRecord(\"characterData\", target);\n        var oldValue = e.prevValue;\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n          if (!options.characterData) return;\n          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\n          return record;\n        });\n        break;\n\n       case \"DOMNodeRemoved\":\n        this.addTransientObserver(e.target);\n\n       case \"DOMNodeInserted\":\n        var changedNode = e.target;\n        var addedNodes, removedNodes;\n        if (e.type === \"DOMNodeInserted\") {\n          addedNodes = [ changedNode ];\n          removedNodes = [];\n        } else {\n          addedNodes = [];\n          removedNodes = [ changedNode ];\n        }\n        var previousSibling = changedNode.previousSibling;\n        var nextSibling = changedNode.nextSibling;\n        var record = getRecord(\"childList\", e.target.parentNode);\n        record.addedNodes = addedNodes;\n        record.removedNodes = removedNodes;\n        record.previousSibling = previousSibling;\n        record.nextSibling = nextSibling;\n        forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {\n          if (!options.childList) return;\n          return record;\n        });\n      }\n      clearRecords();\n    }\n  };\n  global.JsMutationObserver = JsMutationObserver;\n  if (!global.MutationObserver) {\n    global.MutationObserver = JsMutationObserver;\n    JsMutationObserver._isPolyfilled = true;\n  }\n})(self);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}