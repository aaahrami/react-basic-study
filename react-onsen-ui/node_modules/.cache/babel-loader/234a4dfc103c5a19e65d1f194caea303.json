{"ast":null,"code":"(function () {\n  'use strict';\n\n  var g = new function () {}();\n  var aa = new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));\n\n  function k(b) {\n    var a = aa.has(b);\n    b = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);\n    return !a && b;\n  }\n\n  function l(b) {\n    var a = b.isConnected;\n    if (void 0 !== a) return a;\n\n    for (; b && !(b.__CE_isImportDocument || b instanceof Document);) b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);\n\n    return !(!b || !(b.__CE_isImportDocument || b instanceof Document));\n  }\n\n  function m(b, a) {\n    for (; a && a !== b && !a.nextSibling;) a = a.parentNode;\n\n    return a && a !== b ? a.nextSibling : null;\n  }\n\n  function n(b, a, e) {\n    e = e ? e : new Set();\n\n    for (var c = b; c;) {\n      if (c.nodeType === Node.ELEMENT_NODE) {\n        var d = c;\n        a(d);\n        var h = d.localName;\n\n        if (\"link\" === h && \"import\" === d.getAttribute(\"rel\")) {\n          c = d.import;\n          if (c instanceof Node && !e.has(c)) for (e.add(c), c = c.firstChild; c; c = c.nextSibling) n(c, a, e);\n          c = m(b, d);\n          continue;\n        } else if (\"template\" === h) {\n          c = m(b, d);\n          continue;\n        }\n\n        if (d = d.__CE_shadowRoot) for (d = d.firstChild; d; d = d.nextSibling) n(d, a, e);\n      }\n\n      c = c.firstChild ? c.firstChild : m(b, c);\n    }\n  }\n\n  function q(b, a, e) {\n    b[a] = e;\n  }\n\n  ;\n\n  function r() {\n    this.a = new Map();\n    this.f = new Map();\n    this.c = [];\n    this.b = !1;\n  }\n\n  function ba(b, a, e) {\n    b.a.set(a, e);\n    b.f.set(e.constructor, e);\n  }\n\n  function t(b, a) {\n    b.b = !0;\n    b.c.push(a);\n  }\n\n  function v(b, a) {\n    b.b && n(a, function (a) {\n      return w(b, a);\n    });\n  }\n\n  function w(b, a) {\n    if (b.b && !a.__CE_patched) {\n      a.__CE_patched = !0;\n\n      for (var e = 0; e < b.c.length; e++) b.c[e](a);\n    }\n  }\n\n  function x(b, a) {\n    var e = [];\n    n(a, function (b) {\n      return e.push(b);\n    });\n\n    for (a = 0; a < e.length; a++) {\n      var c = e[a];\n      1 === c.__CE_state ? l(c) && b.connectedCallback(c) : y(b, c);\n    }\n  }\n\n  function z(b, a) {\n    var e = [];\n    n(a, function (b) {\n      return e.push(b);\n    });\n\n    for (a = 0; a < e.length; a++) {\n      var c = e[a];\n      1 === c.__CE_state && b.disconnectedCallback(c);\n    }\n  }\n\n  function A(b, a, e) {\n    e = e ? e : new Set();\n    var c = [];\n    n(a, function (d) {\n      if (\"link\" === d.localName && \"import\" === d.getAttribute(\"rel\")) {\n        var a = d.import;\n        a instanceof Node && \"complete\" === a.readyState ? (a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0) : d.addEventListener(\"load\", function () {\n          var a = d.import;\n          a.__CE_documentLoadHandled || (a.__CE_documentLoadHandled = !0, a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0, new Set(e), e.delete(a), A(b, a, e));\n        });\n      } else c.push(d);\n    }, e);\n    if (b.b) for (a = 0; a < c.length; a++) w(b, c[a]);\n\n    for (a = 0; a < c.length; a++) y(b, c[a]);\n  }\n\n  function y(b, a) {\n    if (void 0 === a.__CE_state) {\n      var e = b.a.get(a.localName);\n\n      if (e) {\n        e.constructionStack.push(a);\n        var c = e.constructor;\n\n        try {\n          try {\n            if (new c() !== a) throw Error(\"The custom element constructor did not produce the element being upgraded.\");\n          } finally {\n            e.constructionStack.pop();\n          }\n        } catch (f) {\n          throw a.__CE_state = 2, f;\n        }\n\n        a.__CE_state = 1;\n        a.__CE_definition = e;\n        if (e.attributeChangedCallback) for (e = e.observedAttributes, c = 0; c < e.length; c++) {\n          var d = e[c],\n              h = a.getAttribute(d);\n          null !== h && b.attributeChangedCallback(a, d, null, h, null);\n        }\n        l(a) && b.connectedCallback(a);\n      }\n    }\n  }\n\n  r.prototype.connectedCallback = function (b) {\n    var a = b.__CE_definition;\n    a.connectedCallback && a.connectedCallback.call(b);\n    b.i = !0;\n  };\n\n  r.prototype.disconnectedCallback = function (b) {\n    b.i || this.connectedCallback(b);\n    var a = b.__CE_definition;\n    a.disconnectedCallback && a.disconnectedCallback.call(b);\n    b.i = void 0;\n  };\n\n  r.prototype.attributeChangedCallback = function (b, a, e, c, d) {\n    var h = b.__CE_definition;\n    h.attributeChangedCallback && -1 < h.observedAttributes.indexOf(a) && h.attributeChangedCallback.call(b, a, e, c, d);\n  };\n\n  function B(b, a) {\n    this.c = b;\n    this.a = a;\n    this.b = void 0;\n    A(this.c, this.a);\n    \"loading\" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, {\n      childList: !0,\n      subtree: !0\n    }));\n  }\n\n  function C(b) {\n    b.b && b.b.disconnect();\n  }\n\n  B.prototype.f = function (b) {\n    var a = this.a.readyState;\n    \"interactive\" !== a && \"complete\" !== a || C(this);\n\n    for (a = 0; a < b.length; a++) for (var e = b[a].addedNodes, c = 0; c < e.length; c++) A(this.c, e[c]);\n  };\n\n  function ca() {\n    var b = this;\n    this.b = this.a = void 0;\n    this.c = new Promise(function (a) {\n      b.b = a;\n      b.a && a(b.a);\n    });\n  }\n\n  function D(b) {\n    if (b.a) throw Error(\"Already resolved.\");\n    b.a = void 0;\n    b.b && b.b(void 0);\n  }\n\n  ;\n\n  function E(b) {\n    this.f = !1;\n    this.a = b;\n    this.h = new Map();\n\n    this.g = function (b) {\n      return b();\n    };\n\n    this.b = !1;\n    this.c = [];\n    this.l = new B(b, document);\n  }\n\n  E.prototype.m = function (b, a) {\n    var e = this;\n    if (!(a instanceof Function)) throw new TypeError(\"Custom element constructors must be functions.\");\n    if (!k(b)) throw new SyntaxError(\"The element name '\" + b + \"' is not valid.\");\n    if (this.a.a.get(b)) throw Error(\"A custom element with name '\" + b + \"' has already been defined.\");\n    if (this.f) throw Error(\"A custom element is already being defined.\");\n    this.f = !0;\n    var c, d, h, f, u;\n\n    try {\n      var p = function (b) {\n        var a = P[b];\n        if (void 0 !== a && !(a instanceof Function)) throw Error(\"The '\" + b + \"' callback must be a function.\");\n        return a;\n      },\n          P = a.prototype;\n\n      if (!(P instanceof Object)) throw new TypeError(\"The custom element constructor's prototype is not an object.\");\n      c = p(\"connectedCallback\");\n      d = p(\"disconnectedCallback\");\n      h = p(\"adoptedCallback\");\n      f = p(\"attributeChangedCallback\");\n      u = a.observedAttributes || [];\n    } catch (va) {\n      return;\n    } finally {\n      this.f = !1;\n    }\n\n    ba(this.a, b, {\n      localName: b,\n      constructor: a,\n      connectedCallback: c,\n      disconnectedCallback: d,\n      adoptedCallback: h,\n      attributeChangedCallback: f,\n      observedAttributes: u,\n      constructionStack: []\n    });\n    this.c.push(b);\n    this.b || (this.b = !0, this.g(function () {\n      if (!1 !== e.b) for (e.b = !1, A(e.a, document); 0 < e.c.length;) {\n        var b = e.c.shift();\n        (b = e.h.get(b)) && D(b);\n      }\n    }));\n  };\n\n  E.prototype.get = function (b) {\n    if (b = this.a.a.get(b)) return b.constructor;\n  };\n\n  E.prototype.s = function (b) {\n    if (!k(b)) return Promise.reject(new SyntaxError(\"'\" + b + \"' is not a valid custom element name.\"));\n    var a = this.h.get(b);\n    if (a) return a.c;\n    a = new ca();\n    this.h.set(b, a);\n    this.a.a.get(b) && -1 === this.c.indexOf(b) && D(a);\n    return a.c;\n  };\n\n  E.prototype.o = function (b) {\n    C(this.l);\n    var a = this.g;\n\n    this.g = function (e) {\n      return b(function () {\n        return a(e);\n      });\n    };\n  };\n\n  window.CustomElementRegistry = E;\n  E.prototype.define = E.prototype.m;\n  E.prototype.get = E.prototype.get;\n  E.prototype.whenDefined = E.prototype.s;\n  E.prototype.polyfillWrapFlushCallback = E.prototype.o;\n  var F = window.Document.prototype.createElement,\n      da = window.Document.prototype.createElementNS,\n      ea = window.Document.prototype.importNode,\n      fa = window.Document.prototype.prepend,\n      ga = window.Document.prototype.append,\n      G = window.Node.prototype.cloneNode,\n      H = window.Node.prototype.appendChild,\n      I = window.Node.prototype.insertBefore,\n      J = window.Node.prototype.removeChild,\n      K = window.Node.prototype.replaceChild,\n      L = Object.getOwnPropertyDescriptor(window.Node.prototype, \"textContent\"),\n      M = window.Element.prototype.attachShadow,\n      N = Object.getOwnPropertyDescriptor(window.Element.prototype, \"innerHTML\"),\n      O = window.Element.prototype.getAttribute,\n      Q = window.Element.prototype.setAttribute,\n      R = window.Element.prototype.removeAttribute,\n      S = window.Element.prototype.getAttributeNS,\n      T = window.Element.prototype.setAttributeNS,\n      U = window.Element.prototype.removeAttributeNS,\n      V = window.Element.prototype.insertAdjacentElement,\n      ha = window.Element.prototype.prepend,\n      ia = window.Element.prototype.append,\n      ja = window.Element.prototype.before,\n      ka = window.Element.prototype.after,\n      la = window.Element.prototype.replaceWith,\n      ma = window.Element.prototype.remove,\n      na = window.HTMLElement,\n      W = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, \"innerHTML\"),\n      X = window.HTMLElement.prototype.insertAdjacentElement;\n\n  function oa() {\n    var b = Y;\n\n    window.HTMLElement = function () {\n      function a() {\n        var a = this.constructor,\n            c = b.f.get(a);\n        if (!c) throw Error(\"The custom element being constructed was not registered with `customElements`.\");\n        var d = c.constructionStack;\n        if (!d.length) return d = F.call(document, c.localName), Object.setPrototypeOf(d, a.prototype), d.__CE_state = 1, d.__CE_definition = c, w(b, d), d;\n        var c = d.length - 1,\n            h = d[c];\n        if (h === g) throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\n        d[c] = g;\n        Object.setPrototypeOf(h, a.prototype);\n        w(b, h);\n        return h;\n      }\n\n      a.prototype = na.prototype;\n      return a;\n    }();\n  }\n\n  ;\n\n  function pa(b, a, e) {\n    a.prepend = function (a) {\n      for (var d = [], c = 0; c < arguments.length; ++c) d[c - 0] = arguments[c];\n\n      c = d.filter(function (b) {\n        return b instanceof Node && l(b);\n      });\n      e.j.apply(this, d);\n\n      for (var f = 0; f < c.length; f++) z(b, c[f]);\n\n      if (l(this)) for (c = 0; c < d.length; c++) f = d[c], f instanceof Element && x(b, f);\n    };\n\n    a.append = function (a) {\n      for (var d = [], c = 0; c < arguments.length; ++c) d[c - 0] = arguments[c];\n\n      c = d.filter(function (b) {\n        return b instanceof Node && l(b);\n      });\n      e.append.apply(this, d);\n\n      for (var f = 0; f < c.length; f++) z(b, c[f]);\n\n      if (l(this)) for (c = 0; c < d.length; c++) f = d[c], f instanceof Element && x(b, f);\n    };\n  }\n\n  ;\n\n  function qa() {\n    var b = Y;\n    q(Document.prototype, \"createElement\", function (a) {\n      if (this.__CE_hasRegistry) {\n        var e = b.a.get(a);\n        if (e) return new e.constructor();\n      }\n\n      a = F.call(this, a);\n      w(b, a);\n      return a;\n    });\n    q(Document.prototype, \"importNode\", function (a, e) {\n      a = ea.call(this, a, e);\n      this.__CE_hasRegistry ? A(b, a) : v(b, a);\n      return a;\n    });\n    q(Document.prototype, \"createElementNS\", function (a, e) {\n      if (this.__CE_hasRegistry && (null === a || \"http://www.w3.org/1999/xhtml\" === a)) {\n        var c = b.a.get(e);\n        if (c) return new c.constructor();\n      }\n\n      a = da.call(this, a, e);\n      w(b, a);\n      return a;\n    });\n    pa(b, Document.prototype, {\n      j: fa,\n      append: ga\n    });\n  }\n\n  ;\n\n  function ra() {\n    var b = Y;\n\n    function a(a, c) {\n      Object.defineProperty(a, \"textContent\", {\n        enumerable: c.enumerable,\n        configurable: !0,\n        get: c.get,\n        set: function (a) {\n          if (this.nodeType === Node.TEXT_NODE) c.set.call(this, a);else {\n            var d = void 0;\n\n            if (this.firstChild) {\n              var e = this.childNodes,\n                  u = e.length;\n              if (0 < u && l(this)) for (var d = Array(u), p = 0; p < u; p++) d[p] = e[p];\n            }\n\n            c.set.call(this, a);\n            if (d) for (a = 0; a < d.length; a++) z(b, d[a]);\n          }\n        }\n      });\n    }\n\n    q(Node.prototype, \"insertBefore\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var d = Array.prototype.slice.apply(a.childNodes);\n        a = I.call(this, a, c);\n        if (l(this)) for (c = 0; c < d.length; c++) x(b, d[c]);\n        return a;\n      }\n\n      d = l(a);\n      c = I.call(this, a, c);\n      d && z(b, a);\n      l(this) && x(b, a);\n      return c;\n    });\n    q(Node.prototype, \"appendChild\", function (a) {\n      if (a instanceof DocumentFragment) {\n        var c = Array.prototype.slice.apply(a.childNodes);\n        a = H.call(this, a);\n        if (l(this)) for (var d = 0; d < c.length; d++) x(b, c[d]);\n        return a;\n      }\n\n      c = l(a);\n      d = H.call(this, a);\n      c && z(b, a);\n      l(this) && x(b, a);\n      return d;\n    });\n    q(Node.prototype, \"cloneNode\", function (a) {\n      a = G.call(this, a);\n      this.ownerDocument.__CE_hasRegistry ? A(b, a) : v(b, a);\n      return a;\n    });\n    q(Node.prototype, \"removeChild\", function (a) {\n      var c = l(a),\n          d = J.call(this, a);\n      c && z(b, a);\n      return d;\n    });\n    q(Node.prototype, \"replaceChild\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var d = Array.prototype.slice.apply(a.childNodes);\n        a = K.call(this, a, c);\n        if (l(this)) for (z(b, c), c = 0; c < d.length; c++) x(b, d[c]);\n        return a;\n      }\n\n      var d = l(a),\n          e = K.call(this, a, c),\n          f = l(this);\n      f && z(b, c);\n      d && z(b, a);\n      f && x(b, a);\n      return e;\n    });\n    L && L.get ? a(Node.prototype, L) : t(b, function (b) {\n      a(b, {\n        enumerable: !0,\n        configurable: !0,\n        get: function () {\n          for (var a = [], b = 0; b < this.childNodes.length; b++) a.push(this.childNodes[b].textContent);\n\n          return a.join(\"\");\n        },\n        set: function (a) {\n          for (; this.firstChild;) J.call(this, this.firstChild);\n\n          H.call(this, document.createTextNode(a));\n        }\n      });\n    });\n  }\n\n  ;\n\n  function sa(b) {\n    var a = Element.prototype;\n\n    a.before = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n\n      d = c.filter(function (a) {\n        return a instanceof Node && l(a);\n      });\n      ja.apply(this, c);\n\n      for (var e = 0; e < d.length; e++) z(b, d[e]);\n\n      if (l(this)) for (d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n\n    a.after = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n\n      d = c.filter(function (a) {\n        return a instanceof Node && l(a);\n      });\n      ka.apply(this, c);\n\n      for (var e = 0; e < d.length; e++) z(b, d[e]);\n\n      if (l(this)) for (d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n\n    a.replaceWith = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n\n      var d = c.filter(function (a) {\n        return a instanceof Node && l(a);\n      }),\n          e = l(this);\n      la.apply(this, c);\n\n      for (var f = 0; f < d.length; f++) z(b, d[f]);\n\n      if (e) for (z(b, this), d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n\n    a.remove = function () {\n      var a = l(this);\n      ma.call(this);\n      a && z(b, this);\n    };\n  }\n\n  ;\n\n  function ta() {\n    var b = Y;\n\n    function a(a, c) {\n      Object.defineProperty(a, \"innerHTML\", {\n        enumerable: c.enumerable,\n        configurable: !0,\n        get: c.get,\n        set: function (a) {\n          var d = this,\n              e = void 0;\n          l(this) && (e = [], n(this, function (a) {\n            a !== d && e.push(a);\n          }));\n          c.set.call(this, a);\n          if (e) for (var f = 0; f < e.length; f++) {\n            var h = e[f];\n            1 === h.__CE_state && b.disconnectedCallback(h);\n          }\n          this.ownerDocument.__CE_hasRegistry ? A(b, this) : v(b, this);\n          return a;\n        }\n      });\n    }\n\n    function e(a, c) {\n      q(a, \"insertAdjacentElement\", function (a, d) {\n        var e = l(d);\n        a = c.call(this, a, d);\n        e && z(b, d);\n        l(a) && x(b, d);\n        return a;\n      });\n    }\n\n    M ? q(Element.prototype, \"attachShadow\", function (a) {\n      return this.__CE_shadowRoot = a = M.call(this, a);\n    }) : console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");\n    if (N && N.get) a(Element.prototype, N);else if (W && W.get) a(HTMLElement.prototype, W);else {\n      var c = F.call(document, \"div\");\n      t(b, function (b) {\n        a(b, {\n          enumerable: !0,\n          configurable: !0,\n          get: function () {\n            return G.call(this, !0).innerHTML;\n          },\n          set: function (a) {\n            var b = \"template\" === this.localName ? this.content : this;\n\n            for (c.innerHTML = a; 0 < b.childNodes.length;) J.call(b, b.childNodes[0]);\n\n            for (; 0 < c.childNodes.length;) H.call(b, c.childNodes[0]);\n          }\n        });\n      });\n    }\n    q(Element.prototype, \"setAttribute\", function (a, c) {\n      if (1 !== this.__CE_state) return Q.call(this, a, c);\n      var d = O.call(this, a);\n      Q.call(this, a, c);\n      c = O.call(this, a);\n      b.attributeChangedCallback(this, a, d, c, null);\n    });\n    q(Element.prototype, \"setAttributeNS\", function (a, c, e) {\n      if (1 !== this.__CE_state) return T.call(this, a, c, e);\n      var d = S.call(this, a, c);\n      T.call(this, a, c, e);\n      e = S.call(this, a, c);\n      b.attributeChangedCallback(this, c, d, e, a);\n    });\n    q(Element.prototype, \"removeAttribute\", function (a) {\n      if (1 !== this.__CE_state) return R.call(this, a);\n      var c = O.call(this, a);\n      R.call(this, a);\n      null !== c && b.attributeChangedCallback(this, a, c, null, null);\n    });\n    q(Element.prototype, \"removeAttributeNS\", function (a, c) {\n      if (1 !== this.__CE_state) return U.call(this, a, c);\n      var d = S.call(this, a, c);\n      U.call(this, a, c);\n      var e = S.call(this, a, c);\n      d !== e && b.attributeChangedCallback(this, c, d, e, a);\n    });\n    X ? e(HTMLElement.prototype, X) : V ? e(Element.prototype, V) : console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\n    pa(b, Element.prototype, {\n      j: ha,\n      append: ia\n    });\n    sa(b);\n  }\n\n  ;\n  /*\n  Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n  Code distributed by Google as part of the polymer project is also\n  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n  */\n\n  var Z = window.customElements;\n\n  if (!Z || Z.forcePolyfill || \"function\" != typeof Z.define || \"function\" != typeof Z.get) {\n    var Y = new r();\n    oa();\n    qa();\n    ra();\n    ta();\n    document.__CE_hasRegistry = !0;\n    var ua = new E(Y);\n    Object.defineProperty(window, \"customElements\", {\n      configurable: !0,\n      enumerable: !0,\n      value: ua\n    });\n  }\n\n  ;\n}).call(self);","map":{"version":3,"mappings":"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","names":["AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","validForm","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","Document","window","ShadowRoot","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","Node","element","importNode","child","shadowRoot","firstChild","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","constructor","CustomElementInternals","Map","setDefinition","definition","b","addPatch","listener","patchTree","patch","__CE_patched","i","connectTree","elements","custom","upgradeElement","disconnectTree","patchAndUpgradeTree","gatherElements","localNameToDefinition","_localNameToDefinition","get","result","Error","e","failed","observedAttributes","r","connectedCallback","disconnectedCallback","attributeChangedCallback","oldValue","newValue","namespace","DocumentConstructionObserver","internals","doc","MutationObserver","childList","subtree","disconnect","B","mutations","_handleMutations","readyState","addedNodes","j","Deferred","Promise","resolve","CustomElementRegistry","this._flushCallback","document","E","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","constructionStack","_flush","_flushPending","_internals","_unflushedLocalNames","length","shift","deferred","_whenDefinedDeferred","whenDefined","prior","_promise","outer","polyfillWrapFlushCallback","inner","flush","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","Element_setAttributeNS","Element_removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","_constructorToDefinition","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","lastIndex","$jscompDefaultExport","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","a","connectedBefore","nodes","filter","Element","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","append","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","enumerable","configurable","set","assignedValue","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","apply","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","call","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","d","patch_insertAdjacentElement","baseMethod","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"sources":["C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\AlreadyConstructedMarker.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Utilities.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\CustomElementInternals.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\CustomElementState.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\DocumentConstructionObserver.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Deferred.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\CustomElementRegistry.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Native.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\HTMLElement.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\custom-elements.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Interface\\ParentNode.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Document.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Node.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Interface\\ChildNode.js","C:\\React-app\\test\\ui\\node_modules\\onsenui\\esm\\polyfills\\custom-elements\\src\\Patch\\Element.js"],"sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        if (Utilities.isConnected(element)) {\n          this.connectedCallback(element);\n        }\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = true;\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    if (!element.__CE_isConnectedCallbackCalled) {\n      this.connectedCallback(element);\n    }\n\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = undefined;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"]},"metadata":{},"sourceType":"script"}